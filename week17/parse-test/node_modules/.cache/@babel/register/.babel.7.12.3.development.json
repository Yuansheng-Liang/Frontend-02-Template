{
  "{\"sourceMaps\":\"inline\",\"sourceRoot\":\"F:\\\\极客大学前端训练营\\\\Frontend-02-Template\\\\week17\\\\parse-test\\\\test\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"F:\\\\极客大学前端训练营\\\\Frontend-02-Template\\\\week17\\\\parse-test\",\"filename\":\"F:\\\\极客大学前端训练营\\\\Frontend-02-Template\\\\week17\\\\parse-test\\\\test\\\\parse-test.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\极客大学前端训练营\\\\Frontend-02-Template\\\\week17\\\\parse-test\",\"plugins\":[{\"key\":\"F:\\\\极客大学前端训练营\\\\Frontend-02-Template\\\\week17\\\\node_modules\\\\babel-plugin-istanbul\\\\lib\\\\index.js\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceMaps": "inline",
      "sourceRoot": "F:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test\\test\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "F:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test",
      "filename": "F:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test\\test\\parse-test.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "F:\\极客大学前端训练营\\Frontend-02-Template\\week17\\node_modules\\babel-plugin-istanbul\\lib\\index.js",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test\\test\\parse-test.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "F:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test\\test\\parse-test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "inline",
        "sourceRoot": "F:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test\\test\\",
        "sourceFileName": "parse-test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _parser = require(\"../src/parser.js\");\n\nvar assert = require(\"assert\");\n\ndescribe(\"parseHTML: \", function () {\n  it(\"<a>asd<a/>\", function () {\n    var tree = (0, _parser.parseHTML)('<a>asd<a/>'); // console.log('tree', tree);\n    // console.log('tree.children', tree.children);\n    // console.log('tree.children[0].children', tree.children[0].children);\n\n    assert.equal(588, 588);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnNlLXRlc3QuanMiXSwibmFtZXMiOlsiYXNzZXJ0IiwicmVxdWlyZSIsImRlc2NyaWJlIiwiaXQiLCJ0cmVlIiwiZXF1YWwiXSwibWFwcGluZ3MiOiI7O0FBQ0E7O0FBREEsSUFBSUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUFwQjs7QUFHQUMsUUFBUSxDQUFDLGFBQUQsRUFBZ0IsWUFBVztBQUMvQkMsRUFBQUEsRUFBRSxDQUFDLFlBQUQsRUFBZSxZQUFXO0FBQ3hCLFFBQUlDLElBQUksR0FBRyx1QkFBVSxZQUFWLENBQVgsQ0FEd0IsQ0FFeEI7QUFDQTtBQUNBOztBQUNBSixJQUFBQSxNQUFNLENBQUNLLEtBQVAsQ0FBYSxHQUFiLEVBQWtCLEdBQWxCO0FBQ0gsR0FOQyxDQUFGO0FBUUgsQ0FUTyxDQUFSIiwic291cmNlUm9vdCI6IkY6XFzmnoHlrqLlpKflrabliY3nq6/orq3nu4PokKVcXEZyb250ZW5kLTAyLVRlbXBsYXRlXFx3ZWVrMTdcXHBhcnNlLXRlc3RcXHRlc3RcXCIsInNvdXJjZXNDb250ZW50IjpbInZhciBhc3NlcnQgPSByZXF1aXJlKFwiYXNzZXJ0XCIpO1xyXG5pbXBvcnQge3BhcnNlSFRNTH0gZnJvbSBcIi4uL3NyYy9wYXJzZXIuanNcIjtcclxuXHJcbmRlc2NyaWJlKFwicGFyc2VIVE1MOiBcIiwgZnVuY3Rpb24oKSB7XHJcbiAgICBpdChcIjxhPmFzZDxhLz5cIiwgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgbGV0IHRyZWUgPSBwYXJzZUhUTUwoJzxhPmFzZDxhLz4nKTtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZygndHJlZScsIHRyZWUpO1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCd0cmVlLmNoaWxkcmVuJywgdHJlZS5jaGlsZHJlbik7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ3RyZWUuY2hpbGRyZW5bMF0uY2hpbGRyZW4nLCB0cmVlLmNoaWxkcmVuWzBdLmNoaWxkcmVuKTtcclxuICAgICAgICBhc3NlcnQuZXF1YWwoNTg4LCA1ODgpO1xyXG4gICAgfSk7XHJcblxyXG59KVxyXG5cclxuIl19",
    "map": null,
    "sourceType": "script",
    "mtime": 1604145977774
  },
  "{\"sourceMaps\":\"inline\",\"sourceRoot\":\"F:\\\\极客大学前端训练营\\\\Frontend-02-Template\\\\week17\\\\parse-test\\\\src\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"F:\\\\极客大学前端训练营\\\\Frontend-02-Template\\\\week17\\\\parse-test\",\"filename\":\"F:\\\\极客大学前端训练营\\\\Frontend-02-Template\\\\week17\\\\parse-test\\\\src\\\\parser.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\极客大学前端训练营\\\\Frontend-02-Template\\\\week17\\\\parse-test\",\"plugins\":[{\"key\":\"F:\\\\极客大学前端训练营\\\\Frontend-02-Template\\\\week17\\\\node_modules\\\\babel-plugin-istanbul\\\\lib\\\\index.js\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceMaps": "inline",
      "sourceRoot": "F:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test\\src\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "F:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test",
      "filename": "F:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test\\src\\parser.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "F:\\极客大学前端训练营\\Frontend-02-Template\\week17\\node_modules\\babel-plugin-istanbul\\lib\\index.js",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test\\src\\parser.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "F:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test\\src\\parser.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "inline",
        "sourceRoot": "F:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test\\src\\",
        "sourceFileName": "parser.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseHTML = parseHTML;\n\nfunction cov_2bn3plkn47() {\n  var path = \"F:\\\\\\u6781\\u5BA2\\u5927\\u5B66\\u524D\\u7AEF\\u8BAD\\u7EC3\\u8425\\\\Frontend-02-Template\\\\week17\\\\parse-test\\\\src\\\\parser.js\";\n  var hash = \"cf8a66f19611a0147b39e73a0afe54cb29a37d95\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"F:\\\\\\u6781\\u5BA2\\u5927\\u5B66\\u524D\\u7AEF\\u8BAD\\u7EC3\\u8425\\\\Frontend-02-Template\\\\week17\\\\parse-test\\\\src\\\\parser.js\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 2,\n          column: 12\n        },\n        end: {\n          line: 2,\n          column: 25\n        }\n      },\n      \"1\": {\n        start: {\n          line: 4,\n          column: 19\n        },\n        end: {\n          line: 4,\n          column: 23\n        }\n      },\n      \"2\": {\n        start: {\n          line: 5,\n          column: 23\n        },\n        end: {\n          line: 5,\n          column: 27\n        }\n      },\n      \"3\": {\n        start: {\n          line: 8,\n          column: 12\n        },\n        end: {\n          line: 8,\n          column: 44\n        }\n      },\n      \"4\": {\n        start: {\n          line: 13,\n          column: 11\n        },\n        end: {\n          line: 13,\n          column: 34\n        }\n      },\n      \"5\": {\n        start: {\n          line: 15,\n          column: 1\n        },\n        end: {\n          line: 60,\n          column: 2\n        }\n      },\n      \"6\": {\n        start: {\n          line: 16,\n          column: 16\n        },\n        end: {\n          line: 20,\n          column: 3\n        }\n      },\n      \"7\": {\n        start: {\n          line: 22,\n          column: 2\n        },\n        end: {\n          line: 22,\n          column: 34\n        }\n      },\n      \"8\": {\n        start: {\n          line: 24,\n          column: 2\n        },\n        end: {\n          line: 31,\n          column: 3\n        }\n      },\n      \"9\": {\n        start: {\n          line: 25,\n          column: 3\n        },\n        end: {\n          line: 30,\n          column: 4\n        }\n      },\n      \"10\": {\n        start: {\n          line: 26,\n          column: 4\n        },\n        end: {\n          line: 29,\n          column: 7\n        }\n      },\n      \"11\": {\n        start: {\n          line: 33,\n          column: 2\n        },\n        end: {\n          line: 33,\n          column: 29\n        }\n      },\n      \"12\": {\n        start: {\n          line: 34,\n          column: 2\n        },\n        end: {\n          line: 34,\n          column: 23\n        }\n      },\n      \"13\": {\n        start: {\n          line: 36,\n          column: 2\n        },\n        end: {\n          line: 38,\n          column: 3\n        }\n      },\n      \"14\": {\n        start: {\n          line: 37,\n          column: 3\n        },\n        end: {\n          line: 37,\n          column: 23\n        }\n      },\n      \"15\": {\n        start: {\n          line: 39,\n          column: 2\n        },\n        end: {\n          line: 39,\n          column: 25\n        }\n      },\n      \"16\": {\n        start: {\n          line: 41,\n          column: 8\n        },\n        end: {\n          line: 60,\n          column: 2\n        }\n      },\n      \"17\": {\n        start: {\n          line: 42,\n          column: 2\n        },\n        end: {\n          line: 49,\n          column: 3\n        }\n      },\n      \"18\": {\n        start: {\n          line: 43,\n          column: 3\n        },\n        end: {\n          line: 43,\n          column: 57\n        }\n      },\n      \"19\": {\n        start: {\n          line: 45,\n          column: 3\n        },\n        end: {\n          line: 47,\n          column: 4\n        }\n      },\n      \"20\": {\n        start: {\n          line: 48,\n          column: 3\n        },\n        end: {\n          line: 48,\n          column: 15\n        }\n      },\n      \"21\": {\n        start: {\n          line: 50,\n          column: 2\n        },\n        end: {\n          line: 50,\n          column: 25\n        }\n      },\n      \"22\": {\n        start: {\n          line: 51,\n          column: 8\n        },\n        end: {\n          line: 60,\n          column: 2\n        }\n      },\n      \"23\": {\n        start: {\n          line: 52,\n          column: 2\n        },\n        end: {\n          line: 58,\n          column: 3\n        }\n      },\n      \"24\": {\n        start: {\n          line: 53,\n          column: 3\n        },\n        end: {\n          line: 56,\n          column: 4\n        }\n      },\n      \"25\": {\n        start: {\n          line: 57,\n          column: 3\n        },\n        end: {\n          line: 57,\n          column: 38\n        }\n      },\n      \"26\": {\n        start: {\n          line: 59,\n          column: 2\n        },\n        end: {\n          line: 59,\n          column: 43\n        }\n      },\n      \"27\": {\n        start: {\n          line: 67,\n          column: 2\n        },\n        end: {\n          line: 80,\n          column: 3\n        }\n      },\n      \"28\": {\n        start: {\n          line: 68,\n          column: 6\n        },\n        end: {\n          line: 68,\n          column: 21\n        }\n      },\n      \"29\": {\n        start: {\n          line: 69,\n          column: 9\n        },\n        end: {\n          line: 80,\n          column: 3\n        }\n      },\n      \"30\": {\n        start: {\n          line: 70,\n          column: 2\n        },\n        end: {\n          line: 72,\n          column: 5\n        }\n      },\n      \"31\": {\n        start: {\n          line: 73,\n          column: 2\n        },\n        end: {\n          line: 73,\n          column: 10\n        }\n      },\n      \"32\": {\n        start: {\n          line: 75,\n          column: 3\n        },\n        end: {\n          line: 78,\n          column: 5\n        }\n      },\n      \"33\": {\n        start: {\n          line: 79,\n          column: 5\n        },\n        end: {\n          line: 79,\n          column: 17\n        }\n      },\n      \"34\": {\n        start: {\n          line: 84,\n          column: 2\n        },\n        end: {\n          line: 94,\n          column: 3\n        }\n      },\n      \"35\": {\n        start: {\n          line: 85,\n          column: 5\n        },\n        end: {\n          line: 85,\n          column: 23\n        }\n      },\n      \"36\": {\n        start: {\n          line: 86,\n          column: 9\n        },\n        end: {\n          line: 94,\n          column: 3\n        }\n      },\n      \"37\": {\n        start: {\n          line: 87,\n          column: 4\n        },\n        end: {\n          line: 90,\n          column: 5\n        }\n      },\n      \"38\": {\n        start: {\n          line: 91,\n          column: 5\n        },\n        end: {\n          line: 91,\n          column: 23\n        }\n      },\n      \"39\": {\n        start: {\n          line: 93,\n          column: 5\n        },\n        end: {\n          line: 93,\n          column: 13\n        }\n      },\n      \"40\": {\n        start: {\n          line: 98,\n          column: 2\n        },\n        end: {\n          line: 110,\n          column: 3\n        }\n      },\n      \"41\": {\n        start: {\n          line: 99,\n          column: 4\n        },\n        end: {\n          line: 102,\n          column: 5\n        }\n      },\n      \"42\": {\n        start: {\n          line: 103,\n          column: 5\n        },\n        end: {\n          line: 103,\n          column: 23\n        }\n      },\n      \"43\": {\n        start: {\n          line: 104,\n          column: 9\n        },\n        end: {\n          line: 110,\n          column: 3\n        }\n      },\n      \"44\": {\n        start: {\n          line: 106,\n          column: 9\n        },\n        end: {\n          line: 110,\n          column: 3\n        }\n      },\n      \"45\": {\n        start: {\n          line: 114,\n          column: 1\n        },\n        end: {\n          line: 126,\n          column: 4\n        }\n      },\n      \"46\": {\n        start: {\n          line: 115,\n          column: 2\n        },\n        end: {\n          line: 115,\n          column: 29\n        }\n      },\n      \"47\": {\n        start: {\n          line: 116,\n          column: 8\n        },\n        end: {\n          line: 126,\n          column: 4\n        }\n      },\n      \"48\": {\n        start: {\n          line: 117,\n          column: 4\n        },\n        end: {\n          line: 117,\n          column: 31\n        }\n      },\n      \"49\": {\n        start: {\n          line: 118,\n          column: 10\n        },\n        end: {\n          line: 126,\n          column: 4\n        }\n      },\n      \"50\": {\n        start: {\n          line: 119,\n          column: 5\n        },\n        end: {\n          line: 119,\n          column: 31\n        }\n      },\n      \"51\": {\n        start: {\n          line: 120,\n          column: 3\n        },\n        end: {\n          line: 120,\n          column: 18\n        }\n      },\n      \"52\": {\n        start: {\n          line: 121,\n          column: 10\n        },\n        end: {\n          line: 126,\n          column: 4\n        }\n      },\n      \"53\": {\n        start: {\n          line: 122,\n          column: 4\n        },\n        end: {\n          line: 122,\n          column: 23\n        }\n      },\n      \"54\": {\n        start: {\n          line: 123,\n          column: 4\n        },\n        end: {\n          line: 123,\n          column: 16\n        }\n      },\n      \"55\": {\n        start: {\n          line: 125,\n          column: 4\n        },\n        end: {\n          line: 125,\n          column: 19\n        }\n      },\n      \"56\": {\n        start: {\n          line: 130,\n          column: 1\n        },\n        end: {\n          line: 142,\n          column: 2\n        }\n      },\n      \"57\": {\n        start: {\n          line: 131,\n          column: 2\n        },\n        end: {\n          line: 131,\n          column: 29\n        }\n      },\n      \"58\": {\n        start: {\n          line: 132,\n          column: 8\n        },\n        end: {\n          line: 142,\n          column: 2\n        }\n      },\n      \"59\": {\n        start: {\n          line: 133,\n          column: 2\n        },\n        end: {\n          line: 133,\n          column: 31\n        }\n      },\n      \"60\": {\n        start: {\n          line: 134,\n          column: 8\n        },\n        end: {\n          line: 142,\n          column: 2\n        }\n      },\n      \"61\": {\n        start: {\n          line: 137,\n          column: 2\n        },\n        end: {\n          line: 140,\n          column: 3\n        }\n      },\n      \"62\": {\n        start: {\n          line: 141,\n          column: 2\n        },\n        end: {\n          line: 141,\n          column: 26\n        }\n      },\n      \"63\": {\n        start: {\n          line: 146,\n          column: 1\n        },\n        end: {\n          line: 157,\n          column: 2\n        }\n      },\n      \"64\": {\n        start: {\n          line: 147,\n          column: 2\n        },\n        end: {\n          line: 147,\n          column: 31\n        }\n      },\n      \"65\": {\n        start: {\n          line: 148,\n          column: 8\n        },\n        end: {\n          line: 157,\n          column: 2\n        }\n      },\n      \"66\": {\n        start: {\n          line: 149,\n          column: 2\n        },\n        end: {\n          line: 149,\n          column: 30\n        }\n      },\n      \"67\": {\n        start: {\n          line: 150,\n          column: 8\n        },\n        end: {\n          line: 157,\n          column: 2\n        }\n      },\n      \"68\": {\n        start: {\n          line: 152,\n          column: 8\n        },\n        end: {\n          line: 157,\n          column: 2\n        }\n      },\n      \"69\": {\n        start: {\n          line: 155,\n          column: 2\n        },\n        end: {\n          line: 155,\n          column: 29\n        }\n      },\n      \"70\": {\n        start: {\n          line: 156,\n          column: 2\n        },\n        end: {\n          line: 156,\n          column: 23\n        }\n      },\n      \"71\": {\n        start: {\n          line: 161,\n          column: 1\n        },\n        end: {\n          line: 171,\n          column: 2\n        }\n      },\n      \"72\": {\n        start: {\n          line: 162,\n          column: 2\n        },\n        end: {\n          line: 162,\n          column: 30\n        }\n      },\n      \"73\": {\n        start: {\n          line: 163,\n          column: 8\n        },\n        end: {\n          line: 171,\n          column: 2\n        }\n      },\n      \"74\": {\n        start: {\n          line: 164,\n          column: 2\n        },\n        end: {\n          line: 164,\n          column: 37\n        }\n      },\n      \"75\": {\n        start: {\n          line: 165,\n          column: 8\n        },\n        end: {\n          line: 171,\n          column: 2\n        }\n      },\n      \"76\": {\n        start: {\n          line: 166,\n          column: 2\n        },\n        end: {\n          line: 166,\n          column: 36\n        }\n      },\n      \"77\": {\n        start: {\n          line: 167,\n          column: 8\n        },\n        end: {\n          line: 171,\n          column: 2\n        }\n      },\n      \"78\": {\n        start: {\n          line: 170,\n          column: 2\n        },\n        end: {\n          line: 170,\n          column: 35\n        }\n      },\n      \"79\": {\n        start: {\n          line: 175,\n          column: 1\n        },\n        end: {\n          line: 185,\n          column: 2\n        }\n      },\n      \"80\": {\n        start: {\n          line: 176,\n          column: 2\n        },\n        end: {\n          line: 176,\n          column: 63\n        }\n      },\n      \"81\": {\n        start: {\n          line: 177,\n          column: 2\n        },\n        end: {\n          line: 177,\n          column: 35\n        }\n      },\n      \"82\": {\n        start: {\n          line: 178,\n          column: 8\n        },\n        end: {\n          line: 185,\n          column: 2\n        }\n      },\n      \"83\": {\n        start: {\n          line: 180,\n          column: 8\n        },\n        end: {\n          line: 185,\n          column: 2\n        }\n      },\n      \"84\": {\n        start: {\n          line: 183,\n          column: 2\n        },\n        end: {\n          line: 183,\n          column: 30\n        }\n      },\n      \"85\": {\n        start: {\n          line: 184,\n          column: 2\n        },\n        end: {\n          line: 184,\n          column: 37\n        }\n      },\n      \"86\": {\n        start: {\n          line: 189,\n          column: 1\n        },\n        end: {\n          line: 199,\n          column: 2\n        }\n      },\n      \"87\": {\n        start: {\n          line: 190,\n          column: 2\n        },\n        end: {\n          line: 190,\n          column: 63\n        }\n      },\n      \"88\": {\n        start: {\n          line: 191,\n          column: 2\n        },\n        end: {\n          line: 191,\n          column: 35\n        }\n      },\n      \"89\": {\n        start: {\n          line: 192,\n          column: 8\n        },\n        end: {\n          line: 199,\n          column: 2\n        }\n      },\n      \"90\": {\n        start: {\n          line: 194,\n          column: 8\n        },\n        end: {\n          line: 199,\n          column: 2\n        }\n      },\n      \"91\": {\n        start: {\n          line: 197,\n          column: 2\n        },\n        end: {\n          line: 197,\n          column: 30\n        }\n      },\n      \"92\": {\n        start: {\n          line: 198,\n          column: 2\n        },\n        end: {\n          line: 198,\n          column: 36\n        }\n      },\n      \"93\": {\n        start: {\n          line: 203,\n          column: 1\n        },\n        end: {\n          line: 216,\n          column: 2\n        }\n      },\n      \"94\": {\n        start: {\n          line: 204,\n          column: 2\n        },\n        end: {\n          line: 204,\n          column: 29\n        }\n      },\n      \"95\": {\n        start: {\n          line: 205,\n          column: 8\n        },\n        end: {\n          line: 216,\n          column: 2\n        }\n      },\n      \"96\": {\n        start: {\n          line: 206,\n          column: 2\n        },\n        end: {\n          line: 206,\n          column: 29\n        }\n      },\n      \"97\": {\n        start: {\n          line: 207,\n          column: 8\n        },\n        end: {\n          line: 216,\n          column: 2\n        }\n      },\n      \"98\": {\n        start: {\n          line: 208,\n          column: 2\n        },\n        end: {\n          line: 208,\n          column: 63\n        }\n      },\n      \"99\": {\n        start: {\n          line: 209,\n          column: 2\n        },\n        end: {\n          line: 209,\n          column: 21\n        }\n      },\n      \"100\": {\n        start: {\n          line: 210,\n          column: 2\n        },\n        end: {\n          line: 210,\n          column: 14\n        }\n      },\n      \"101\": {\n        start: {\n          line: 211,\n          column: 8\n        },\n        end: {\n          line: 216,\n          column: 2\n        }\n      },\n      \"102\": {\n        start: {\n          line: 214,\n          column: 2\n        },\n        end: {\n          line: 214,\n          column: 30\n        }\n      },\n      \"103\": {\n        start: {\n          line: 215,\n          column: 2\n        },\n        end: {\n          line: 215,\n          column: 35\n        }\n      },\n      \"104\": {\n        start: {\n          line: 220,\n          column: 1\n        },\n        end: {\n          line: 239,\n          column: 2\n        }\n      },\n      \"105\": {\n        start: {\n          line: 221,\n          column: 2\n        },\n        end: {\n          line: 221,\n          column: 63\n        }\n      },\n      \"106\": {\n        start: {\n          line: 222,\n          column: 2\n        },\n        end: {\n          line: 222,\n          column: 29\n        }\n      },\n      \"107\": {\n        start: {\n          line: 223,\n          column: 8\n        },\n        end: {\n          line: 239,\n          column: 2\n        }\n      },\n      \"108\": {\n        start: {\n          line: 224,\n          column: 2\n        },\n        end: {\n          line: 224,\n          column: 63\n        }\n      },\n      \"109\": {\n        start: {\n          line: 225,\n          column: 2\n        },\n        end: {\n          line: 225,\n          column: 29\n        }\n      },\n      \"110\": {\n        start: {\n          line: 226,\n          column: 8\n        },\n        end: {\n          line: 239,\n          column: 2\n        }\n      },\n      \"111\": {\n        start: {\n          line: 227,\n          column: 2\n        },\n        end: {\n          line: 227,\n          column: 63\n        }\n      },\n      \"112\": {\n        start: {\n          line: 228,\n          column: 2\n        },\n        end: {\n          line: 228,\n          column: 21\n        }\n      },\n      \"113\": {\n        start: {\n          line: 229,\n          column: 2\n        },\n        end: {\n          line: 229,\n          column: 14\n        }\n      },\n      \"114\": {\n        start: {\n          line: 230,\n          column: 8\n        },\n        end: {\n          line: 239,\n          column: 2\n        }\n      },\n      \"115\": {\n        start: {\n          line: 232,\n          column: 8\n        },\n        end: {\n          line: 239,\n          column: 2\n        }\n      },\n      \"116\": {\n        start: {\n          line: 234,\n          column: 8\n        },\n        end: {\n          line: 239,\n          column: 2\n        }\n      },\n      \"117\": {\n        start: {\n          line: 237,\n          column: 2\n        },\n        end: {\n          line: 237,\n          column: 30\n        }\n      },\n      \"118\": {\n        start: {\n          line: 238,\n          column: 2\n        },\n        end: {\n          line: 238,\n          column: 32\n        }\n      },\n      \"119\": {\n        start: {\n          line: 244,\n          column: 1\n        },\n        end: {\n          line: 252,\n          column: 2\n        }\n      },\n      \"120\": {\n        start: {\n          line: 245,\n          column: 2\n        },\n        end: {\n          line: 245,\n          column: 36\n        }\n      },\n      \"121\": {\n        start: {\n          line: 246,\n          column: 2\n        },\n        end: {\n          line: 246,\n          column: 21\n        }\n      },\n      \"122\": {\n        start: {\n          line: 247,\n          column: 2\n        },\n        end: {\n          line: 247,\n          column: 14\n        }\n      },\n      \"123\": {\n        start: {\n          line: 248,\n          column: 8\n        },\n        end: {\n          line: 252,\n          column: 2\n        }\n      },\n      \"124\": {\n        start: {\n          line: 256,\n          column: 1\n        },\n        end: {\n          line: 275,\n          column: 2\n        }\n      },\n      \"125\": {\n        start: {\n          line: 257,\n          column: 2\n        },\n        end: {\n          line: 257,\n          column: 28\n        }\n      },\n      \"126\": {\n        start: {\n          line: 258,\n          column: 8\n        },\n        end: {\n          line: 275,\n          column: 2\n        }\n      },\n      \"127\": {\n        start: {\n          line: 259,\n          column: 2\n        },\n        end: {\n          line: 259,\n          column: 29\n        }\n      },\n      \"128\": {\n        start: {\n          line: 260,\n          column: 8\n        },\n        end: {\n          line: 275,\n          column: 2\n        }\n      },\n      \"129\": {\n        start: {\n          line: 261,\n          column: 2\n        },\n        end: {\n          line: 261,\n          column: 30\n        }\n      },\n      \"130\": {\n        start: {\n          line: 262,\n          column: 8\n        },\n        end: {\n          line: 275,\n          column: 2\n        }\n      },\n      \"131\": {\n        start: {\n          line: 263,\n          column: 2\n        },\n        end: {\n          line: 263,\n          column: 63\n        }\n      },\n      \"132\": {\n        start: {\n          line: 264,\n          column: 2\n        },\n        end: {\n          line: 264,\n          column: 21\n        }\n      },\n      \"133\": {\n        start: {\n          line: 265,\n          column: 2\n        },\n        end: {\n          line: 265,\n          column: 14\n        }\n      },\n      \"134\": {\n        start: {\n          line: 266,\n          column: 8\n        },\n        end: {\n          line: 275,\n          column: 2\n        }\n      },\n      \"135\": {\n        start: {\n          line: 269,\n          column: 2\n        },\n        end: {\n          line: 269,\n          column: 63\n        }\n      },\n      \"136\": {\n        start: {\n          line: 270,\n          column: 2\n        },\n        end: {\n          line: 273,\n          column: 4\n        }\n      },\n      \"137\": {\n        start: {\n          line: 274,\n          column: 2\n        },\n        end: {\n          line: 274,\n          column: 26\n        }\n      },\n      \"138\": {\n        start: {\n          line: 279,\n          column: 16\n        },\n        end: {\n          line: 279,\n          column: 20\n        }\n      },\n      \"139\": {\n        start: {\n          line: 280,\n          column: 4\n        },\n        end: {\n          line: 282,\n          column: 5\n        }\n      },\n      \"140\": {\n        start: {\n          line: 281,\n          column: 8\n        },\n        end: {\n          line: 281,\n          column: 25\n        }\n      },\n      \"141\": {\n        start: {\n          line: 283,\n          column: 4\n        },\n        end: {\n          line: 283,\n          column: 23\n        }\n      },\n      \"142\": {\n        start: {\n          line: 284,\n          column: 3\n        },\n        end: {\n          line: 284,\n          column: 21\n        }\n      },\n      \"143\": {\n        start: {\n          line: 286,\n          column: 1\n        },\n        end: {\n          line: 286,\n          column: 17\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"emit\",\n        decl: {\n          start: {\n            line: 10,\n            column: 9\n          },\n          end: {\n            line: 10,\n            column: 13\n          }\n        },\n        loc: {\n          start: {\n            line: 10,\n            column: 21\n          },\n          end: {\n            line: 61,\n            column: 1\n          }\n        },\n        line: 10\n      },\n      \"1\": {\n        name: \"data\",\n        decl: {\n          start: {\n            line: 66,\n            column: 9\n          },\n          end: {\n            line: 66,\n            column: 13\n          }\n        },\n        loc: {\n          start: {\n            line: 66,\n            column: 16\n          },\n          end: {\n            line: 81,\n            column: 1\n          }\n        },\n        line: 66\n      },\n      \"2\": {\n        name: \"tagOpen\",\n        decl: {\n          start: {\n            line: 83,\n            column: 9\n          },\n          end: {\n            line: 83,\n            column: 16\n          }\n        },\n        loc: {\n          start: {\n            line: 83,\n            column: 19\n          },\n          end: {\n            line: 95,\n            column: 1\n          }\n        },\n        line: 83\n      },\n      \"3\": {\n        name: \"endTagOpen\",\n        decl: {\n          start: {\n            line: 97,\n            column: 9\n          },\n          end: {\n            line: 97,\n            column: 19\n          }\n        },\n        loc: {\n          start: {\n            line: 97,\n            column: 22\n          },\n          end: {\n            line: 111,\n            column: 1\n          }\n        },\n        line: 97\n      },\n      \"4\": {\n        name: \"tagName\",\n        decl: {\n          start: {\n            line: 113,\n            column: 9\n          },\n          end: {\n            line: 113,\n            column: 16\n          }\n        },\n        loc: {\n          start: {\n            line: 113,\n            column: 19\n          },\n          end: {\n            line: 127,\n            column: 1\n          }\n        },\n        line: 113\n      },\n      \"5\": {\n        name: \"beforeAttributeName\",\n        decl: {\n          start: {\n            line: 129,\n            column: 9\n          },\n          end: {\n            line: 129,\n            column: 28\n          }\n        },\n        loc: {\n          start: {\n            line: 129,\n            column: 31\n          },\n          end: {\n            line: 143,\n            column: 1\n          }\n        },\n        line: 129\n      },\n      \"6\": {\n        name: \"attributeName\",\n        decl: {\n          start: {\n            line: 145,\n            column: 9\n          },\n          end: {\n            line: 145,\n            column: 22\n          }\n        },\n        loc: {\n          start: {\n            line: 145,\n            column: 25\n          },\n          end: {\n            line: 158,\n            column: 1\n          }\n        },\n        line: 145\n      },\n      \"7\": {\n        name: \"beforeAttributeValue\",\n        decl: {\n          start: {\n            line: 160,\n            column: 9\n          },\n          end: {\n            line: 160,\n            column: 29\n          }\n        },\n        loc: {\n          start: {\n            line: 160,\n            column: 33\n          },\n          end: {\n            line: 172,\n            column: 1\n          }\n        },\n        line: 160\n      },\n      \"8\": {\n        name: \"doubuleQuotedAttributeValue\",\n        decl: {\n          start: {\n            line: 174,\n            column: 9\n          },\n          end: {\n            line: 174,\n            column: 36\n          }\n        },\n        loc: {\n          start: {\n            line: 174,\n            column: 39\n          },\n          end: {\n            line: 186,\n            column: 1\n          }\n        },\n        line: 174\n      },\n      \"9\": {\n        name: \"singleQuotedAttributeValue\",\n        decl: {\n          start: {\n            line: 188,\n            column: 9\n          },\n          end: {\n            line: 188,\n            column: 35\n          }\n        },\n        loc: {\n          start: {\n            line: 188,\n            column: 38\n          },\n          end: {\n            line: 200,\n            column: 1\n          }\n        },\n        line: 188\n      },\n      \"10\": {\n        name: \"afterQuotedAttributeValue\",\n        decl: {\n          start: {\n            line: 202,\n            column: 9\n          },\n          end: {\n            line: 202,\n            column: 34\n          }\n        },\n        loc: {\n          start: {\n            line: 202,\n            column: 37\n          },\n          end: {\n            line: 217,\n            column: 1\n          }\n        },\n        line: 202\n      },\n      \"11\": {\n        name: \"UnquotedAttributeValue\",\n        decl: {\n          start: {\n            line: 219,\n            column: 9\n          },\n          end: {\n            line: 219,\n            column: 31\n          }\n        },\n        loc: {\n          start: {\n            line: 219,\n            column: 34\n          },\n          end: {\n            line: 241,\n            column: 1\n          }\n        },\n        line: 219\n      },\n      \"12\": {\n        name: \"selfClosingStartTag\",\n        decl: {\n          start: {\n            line: 243,\n            column: 9\n          },\n          end: {\n            line: 243,\n            column: 28\n          }\n        },\n        loc: {\n          start: {\n            line: 243,\n            column: 31\n          },\n          end: {\n            line: 253,\n            column: 1\n          }\n        },\n        line: 243\n      },\n      \"13\": {\n        name: \"afterAttributeName\",\n        decl: {\n          start: {\n            line: 255,\n            column: 9\n          },\n          end: {\n            line: 255,\n            column: 27\n          }\n        },\n        loc: {\n          start: {\n            line: 255,\n            column: 30\n          },\n          end: {\n            line: 276,\n            column: 1\n          }\n        },\n        line: 255\n      },\n      \"14\": {\n        name: \"parseHTML\",\n        decl: {\n          start: {\n            line: 278,\n            column: 16\n          },\n          end: {\n            line: 278,\n            column: 25\n          }\n        },\n        loc: {\n          start: {\n            line: 278,\n            column: 32\n          },\n          end: {\n            line: 287,\n            column: 1\n          }\n        },\n        line: 278\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 15,\n            column: 1\n          },\n          end: {\n            line: 60,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 15,\n            column: 1\n          },\n          end: {\n            line: 60,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 15,\n            column: 1\n          },\n          end: {\n            line: 60,\n            column: 2\n          }\n        }],\n        line: 15\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 25,\n            column: 3\n          },\n          end: {\n            line: 30,\n            column: 4\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 25,\n            column: 3\n          },\n          end: {\n            line: 30,\n            column: 4\n          }\n        }, {\n          start: {\n            line: 25,\n            column: 3\n          },\n          end: {\n            line: 30,\n            column: 4\n          }\n        }],\n        line: 25\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 25,\n            column: 6\n          },\n          end: {\n            line: 25,\n            column: 35\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 25,\n            column: 6\n          },\n          end: {\n            line: 25,\n            column: 17\n          }\n        }, {\n          start: {\n            line: 25,\n            column: 21\n          },\n          end: {\n            line: 25,\n            column: 35\n          }\n        }],\n        line: 25\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 36,\n            column: 2\n          },\n          end: {\n            line: 38,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 36,\n            column: 2\n          },\n          end: {\n            line: 38,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 36,\n            column: 2\n          },\n          end: {\n            line: 38,\n            column: 3\n          }\n        }],\n        line: 36\n      },\n      \"4\": {\n        loc: {\n          start: {\n            line: 41,\n            column: 8\n          },\n          end: {\n            line: 60,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 41,\n            column: 8\n          },\n          end: {\n            line: 60,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 41,\n            column: 8\n          },\n          end: {\n            line: 60,\n            column: 2\n          }\n        }],\n        line: 41\n      },\n      \"5\": {\n        loc: {\n          start: {\n            line: 42,\n            column: 2\n          },\n          end: {\n            line: 49,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 42,\n            column: 2\n          },\n          end: {\n            line: 49,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 42,\n            column: 2\n          },\n          end: {\n            line: 49,\n            column: 3\n          }\n        }],\n        line: 42\n      },\n      \"6\": {\n        loc: {\n          start: {\n            line: 45,\n            column: 3\n          },\n          end: {\n            line: 47,\n            column: 4\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 45,\n            column: 3\n          },\n          end: {\n            line: 47,\n            column: 4\n          }\n        }, {\n          start: {\n            line: 45,\n            column: 3\n          },\n          end: {\n            line: 47,\n            column: 4\n          }\n        }],\n        line: 45\n      },\n      \"7\": {\n        loc: {\n          start: {\n            line: 51,\n            column: 8\n          },\n          end: {\n            line: 60,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 51,\n            column: 8\n          },\n          end: {\n            line: 60,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 51,\n            column: 8\n          },\n          end: {\n            line: 60,\n            column: 2\n          }\n        }],\n        line: 51\n      },\n      \"8\": {\n        loc: {\n          start: {\n            line: 52,\n            column: 2\n          },\n          end: {\n            line: 58,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 52,\n            column: 2\n          },\n          end: {\n            line: 58,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 52,\n            column: 2\n          },\n          end: {\n            line: 58,\n            column: 3\n          }\n        }],\n        line: 52\n      },\n      \"9\": {\n        loc: {\n          start: {\n            line: 67,\n            column: 2\n          },\n          end: {\n            line: 80,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 67,\n            column: 2\n          },\n          end: {\n            line: 80,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 67,\n            column: 2\n          },\n          end: {\n            line: 80,\n            column: 3\n          }\n        }],\n        line: 67\n      },\n      \"10\": {\n        loc: {\n          start: {\n            line: 69,\n            column: 9\n          },\n          end: {\n            line: 80,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 69,\n            column: 9\n          },\n          end: {\n            line: 80,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 69,\n            column: 9\n          },\n          end: {\n            line: 80,\n            column: 3\n          }\n        }],\n        line: 69\n      },\n      \"11\": {\n        loc: {\n          start: {\n            line: 84,\n            column: 2\n          },\n          end: {\n            line: 94,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 84,\n            column: 2\n          },\n          end: {\n            line: 94,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 84,\n            column: 2\n          },\n          end: {\n            line: 94,\n            column: 3\n          }\n        }],\n        line: 84\n      },\n      \"12\": {\n        loc: {\n          start: {\n            line: 86,\n            column: 9\n          },\n          end: {\n            line: 94,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 86,\n            column: 9\n          },\n          end: {\n            line: 94,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 86,\n            column: 9\n          },\n          end: {\n            line: 94,\n            column: 3\n          }\n        }],\n        line: 86\n      },\n      \"13\": {\n        loc: {\n          start: {\n            line: 98,\n            column: 2\n          },\n          end: {\n            line: 110,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 98,\n            column: 2\n          },\n          end: {\n            line: 110,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 98,\n            column: 2\n          },\n          end: {\n            line: 110,\n            column: 3\n          }\n        }],\n        line: 98\n      },\n      \"14\": {\n        loc: {\n          start: {\n            line: 104,\n            column: 9\n          },\n          end: {\n            line: 110,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 104,\n            column: 9\n          },\n          end: {\n            line: 110,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 104,\n            column: 9\n          },\n          end: {\n            line: 110,\n            column: 3\n          }\n        }],\n        line: 104\n      },\n      \"15\": {\n        loc: {\n          start: {\n            line: 106,\n            column: 9\n          },\n          end: {\n            line: 110,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 106,\n            column: 9\n          },\n          end: {\n            line: 110,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 106,\n            column: 9\n          },\n          end: {\n            line: 110,\n            column: 3\n          }\n        }],\n        line: 106\n      },\n      \"16\": {\n        loc: {\n          start: {\n            line: 114,\n            column: 1\n          },\n          end: {\n            line: 126,\n            column: 4\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 114,\n            column: 1\n          },\n          end: {\n            line: 126,\n            column: 4\n          }\n        }, {\n          start: {\n            line: 114,\n            column: 1\n          },\n          end: {\n            line: 126,\n            column: 4\n          }\n        }],\n        line: 114\n      },\n      \"17\": {\n        loc: {\n          start: {\n            line: 116,\n            column: 8\n          },\n          end: {\n            line: 126,\n            column: 4\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 116,\n            column: 8\n          },\n          end: {\n            line: 126,\n            column: 4\n          }\n        }, {\n          start: {\n            line: 116,\n            column: 8\n          },\n          end: {\n            line: 126,\n            column: 4\n          }\n        }],\n        line: 116\n      },\n      \"18\": {\n        loc: {\n          start: {\n            line: 118,\n            column: 10\n          },\n          end: {\n            line: 126,\n            column: 4\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 118,\n            column: 10\n          },\n          end: {\n            line: 126,\n            column: 4\n          }\n        }, {\n          start: {\n            line: 118,\n            column: 10\n          },\n          end: {\n            line: 126,\n            column: 4\n          }\n        }],\n        line: 118\n      },\n      \"19\": {\n        loc: {\n          start: {\n            line: 121,\n            column: 10\n          },\n          end: {\n            line: 126,\n            column: 4\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 121,\n            column: 10\n          },\n          end: {\n            line: 126,\n            column: 4\n          }\n        }, {\n          start: {\n            line: 121,\n            column: 10\n          },\n          end: {\n            line: 126,\n            column: 4\n          }\n        }],\n        line: 121\n      },\n      \"20\": {\n        loc: {\n          start: {\n            line: 130,\n            column: 1\n          },\n          end: {\n            line: 142,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 130,\n            column: 1\n          },\n          end: {\n            line: 142,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 130,\n            column: 1\n          },\n          end: {\n            line: 142,\n            column: 2\n          }\n        }],\n        line: 130\n      },\n      \"21\": {\n        loc: {\n          start: {\n            line: 132,\n            column: 8\n          },\n          end: {\n            line: 142,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 132,\n            column: 8\n          },\n          end: {\n            line: 142,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 132,\n            column: 8\n          },\n          end: {\n            line: 142,\n            column: 2\n          }\n        }],\n        line: 132\n      },\n      \"22\": {\n        loc: {\n          start: {\n            line: 132,\n            column: 11\n          },\n          end: {\n            line: 132,\n            column: 45\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 132,\n            column: 11\n          },\n          end: {\n            line: 132,\n            column: 19\n          }\n        }, {\n          start: {\n            line: 132,\n            column: 23\n          },\n          end: {\n            line: 132,\n            column: 31\n          }\n        }, {\n          start: {\n            line: 132,\n            column: 35\n          },\n          end: {\n            line: 132,\n            column: 45\n          }\n        }],\n        line: 132\n      },\n      \"23\": {\n        loc: {\n          start: {\n            line: 134,\n            column: 8\n          },\n          end: {\n            line: 142,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 134,\n            column: 8\n          },\n          end: {\n            line: 142,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 134,\n            column: 8\n          },\n          end: {\n            line: 142,\n            column: 2\n          }\n        }],\n        line: 134\n      },\n      \"24\": {\n        loc: {\n          start: {\n            line: 146,\n            column: 1\n          },\n          end: {\n            line: 157,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 146,\n            column: 1\n          },\n          end: {\n            line: 157,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 146,\n            column: 1\n          },\n          end: {\n            line: 157,\n            column: 2\n          }\n        }],\n        line: 146\n      },\n      \"25\": {\n        loc: {\n          start: {\n            line: 146,\n            column: 4\n          },\n          end: {\n            line: 146,\n            column: 62\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 146,\n            column: 4\n          },\n          end: {\n            line: 146,\n            column: 26\n          }\n        }, {\n          start: {\n            line: 146,\n            column: 30\n          },\n          end: {\n            line: 146,\n            column: 38\n          }\n        }, {\n          start: {\n            line: 146,\n            column: 42\n          },\n          end: {\n            line: 146,\n            column: 50\n          }\n        }, {\n          start: {\n            line: 146,\n            column: 54\n          },\n          end: {\n            line: 146,\n            column: 62\n          }\n        }],\n        line: 146\n      },\n      \"26\": {\n        loc: {\n          start: {\n            line: 148,\n            column: 8\n          },\n          end: {\n            line: 157,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 148,\n            column: 8\n          },\n          end: {\n            line: 157,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 148,\n            column: 8\n          },\n          end: {\n            line: 157,\n            column: 2\n          }\n        }],\n        line: 148\n      },\n      \"27\": {\n        loc: {\n          start: {\n            line: 150,\n            column: 8\n          },\n          end: {\n            line: 157,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 150,\n            column: 8\n          },\n          end: {\n            line: 157,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 150,\n            column: 8\n          },\n          end: {\n            line: 157,\n            column: 2\n          }\n        }],\n        line: 150\n      },\n      \"28\": {\n        loc: {\n          start: {\n            line: 152,\n            column: 8\n          },\n          end: {\n            line: 157,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 152,\n            column: 8\n          },\n          end: {\n            line: 157,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 152,\n            column: 8\n          },\n          end: {\n            line: 157,\n            column: 2\n          }\n        }],\n        line: 152\n      },\n      \"29\": {\n        loc: {\n          start: {\n            line: 152,\n            column: 11\n          },\n          end: {\n            line: 152,\n            column: 44\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 152,\n            column: 11\n          },\n          end: {\n            line: 152,\n            column: 19\n          }\n        }, {\n          start: {\n            line: 152,\n            column: 23\n          },\n          end: {\n            line: 152,\n            column: 32\n          }\n        }, {\n          start: {\n            line: 152,\n            column: 36\n          },\n          end: {\n            line: 152,\n            column: 44\n          }\n        }],\n        line: 152\n      },\n      \"30\": {\n        loc: {\n          start: {\n            line: 161,\n            column: 1\n          },\n          end: {\n            line: 171,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 161,\n            column: 1\n          },\n          end: {\n            line: 171,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 161,\n            column: 1\n          },\n          end: {\n            line: 171,\n            column: 2\n          }\n        }],\n        line: 161\n      },\n      \"31\": {\n        loc: {\n          start: {\n            line: 161,\n            column: 4\n          },\n          end: {\n            line: 161,\n            column: 61\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 161,\n            column: 4\n          },\n          end: {\n            line: 161,\n            column: 26\n          }\n        }, {\n          start: {\n            line: 161,\n            column: 30\n          },\n          end: {\n            line: 161,\n            column: 37\n          }\n        }, {\n          start: {\n            line: 161,\n            column: 41\n          },\n          end: {\n            line: 161,\n            column: 49\n          }\n        }, {\n          start: {\n            line: 161,\n            column: 53\n          },\n          end: {\n            line: 161,\n            column: 61\n          }\n        }],\n        line: 161\n      },\n      \"32\": {\n        loc: {\n          start: {\n            line: 163,\n            column: 8\n          },\n          end: {\n            line: 171,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 163,\n            column: 8\n          },\n          end: {\n            line: 171,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 163,\n            column: 8\n          },\n          end: {\n            line: 171,\n            column: 2\n          }\n        }],\n        line: 163\n      },\n      \"33\": {\n        loc: {\n          start: {\n            line: 165,\n            column: 8\n          },\n          end: {\n            line: 171,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 165,\n            column: 8\n          },\n          end: {\n            line: 171,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 165,\n            column: 8\n          },\n          end: {\n            line: 171,\n            column: 2\n          }\n        }],\n        line: 165\n      },\n      \"34\": {\n        loc: {\n          start: {\n            line: 167,\n            column: 8\n          },\n          end: {\n            line: 171,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 167,\n            column: 8\n          },\n          end: {\n            line: 171,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 167,\n            column: 8\n          },\n          end: {\n            line: 171,\n            column: 2\n          }\n        }],\n        line: 167\n      },\n      \"35\": {\n        loc: {\n          start: {\n            line: 175,\n            column: 1\n          },\n          end: {\n            line: 185,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 175,\n            column: 1\n          },\n          end: {\n            line: 185,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 175,\n            column: 1\n          },\n          end: {\n            line: 185,\n            column: 2\n          }\n        }],\n        line: 175\n      },\n      \"36\": {\n        loc: {\n          start: {\n            line: 178,\n            column: 8\n          },\n          end: {\n            line: 185,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 178,\n            column: 8\n          },\n          end: {\n            line: 185,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 178,\n            column: 8\n          },\n          end: {\n            line: 185,\n            column: 2\n          }\n        }],\n        line: 178\n      },\n      \"37\": {\n        loc: {\n          start: {\n            line: 180,\n            column: 8\n          },\n          end: {\n            line: 185,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 180,\n            column: 8\n          },\n          end: {\n            line: 185,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 180,\n            column: 8\n          },\n          end: {\n            line: 185,\n            column: 2\n          }\n        }],\n        line: 180\n      },\n      \"38\": {\n        loc: {\n          start: {\n            line: 189,\n            column: 1\n          },\n          end: {\n            line: 199,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 189,\n            column: 1\n          },\n          end: {\n            line: 199,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 189,\n            column: 1\n          },\n          end: {\n            line: 199,\n            column: 2\n          }\n        }],\n        line: 189\n      },\n      \"39\": {\n        loc: {\n          start: {\n            line: 192,\n            column: 8\n          },\n          end: {\n            line: 199,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 192,\n            column: 8\n          },\n          end: {\n            line: 199,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 192,\n            column: 8\n          },\n          end: {\n            line: 199,\n            column: 2\n          }\n        }],\n        line: 192\n      },\n      \"40\": {\n        loc: {\n          start: {\n            line: 194,\n            column: 8\n          },\n          end: {\n            line: 199,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 194,\n            column: 8\n          },\n          end: {\n            line: 199,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 194,\n            column: 8\n          },\n          end: {\n            line: 199,\n            column: 2\n          }\n        }],\n        line: 194\n      },\n      \"41\": {\n        loc: {\n          start: {\n            line: 203,\n            column: 1\n          },\n          end: {\n            line: 216,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 203,\n            column: 1\n          },\n          end: {\n            line: 216,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 203,\n            column: 1\n          },\n          end: {\n            line: 216,\n            column: 2\n          }\n        }],\n        line: 203\n      },\n      \"42\": {\n        loc: {\n          start: {\n            line: 205,\n            column: 8\n          },\n          end: {\n            line: 216,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 205,\n            column: 8\n          },\n          end: {\n            line: 216,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 205,\n            column: 8\n          },\n          end: {\n            line: 216,\n            column: 2\n          }\n        }],\n        line: 205\n      },\n      \"43\": {\n        loc: {\n          start: {\n            line: 207,\n            column: 8\n          },\n          end: {\n            line: 216,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 207,\n            column: 8\n          },\n          end: {\n            line: 216,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 207,\n            column: 8\n          },\n          end: {\n            line: 216,\n            column: 2\n          }\n        }],\n        line: 207\n      },\n      \"44\": {\n        loc: {\n          start: {\n            line: 211,\n            column: 8\n          },\n          end: {\n            line: 216,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 211,\n            column: 8\n          },\n          end: {\n            line: 216,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 211,\n            column: 8\n          },\n          end: {\n            line: 216,\n            column: 2\n          }\n        }],\n        line: 211\n      },\n      \"45\": {\n        loc: {\n          start: {\n            line: 220,\n            column: 1\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 220,\n            column: 1\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 220,\n            column: 1\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        }],\n        line: 220\n      },\n      \"46\": {\n        loc: {\n          start: {\n            line: 223,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 223,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 223,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        }],\n        line: 223\n      },\n      \"47\": {\n        loc: {\n          start: {\n            line: 226,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 226,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 226,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        }],\n        line: 226\n      },\n      \"48\": {\n        loc: {\n          start: {\n            line: 230,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 230,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 230,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        }],\n        line: 230\n      },\n      \"49\": {\n        loc: {\n          start: {\n            line: 232,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 232,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 232,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        }],\n        line: 232\n      },\n      \"50\": {\n        loc: {\n          start: {\n            line: 232,\n            column: 11\n          },\n          end: {\n            line: 232,\n            column: 68\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 232,\n            column: 11\n          },\n          end: {\n            line: 232,\n            column: 20\n          }\n        }, {\n          start: {\n            line: 232,\n            column: 24\n          },\n          end: {\n            line: 232,\n            column: 32\n          }\n        }, {\n          start: {\n            line: 232,\n            column: 36\n          },\n          end: {\n            line: 232,\n            column: 44\n          }\n        }, {\n          start: {\n            line: 232,\n            column: 48\n          },\n          end: {\n            line: 232,\n            column: 56\n          }\n        }, {\n          start: {\n            line: 232,\n            column: 60\n          },\n          end: {\n            line: 232,\n            column: 68\n          }\n        }],\n        line: 232\n      },\n      \"51\": {\n        loc: {\n          start: {\n            line: 234,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 234,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 234,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        }],\n        line: 234\n      },\n      \"52\": {\n        loc: {\n          start: {\n            line: 244,\n            column: 1\n          },\n          end: {\n            line: 252,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 244,\n            column: 1\n          },\n          end: {\n            line: 252,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 244,\n            column: 1\n          },\n          end: {\n            line: 252,\n            column: 2\n          }\n        }],\n        line: 244\n      },\n      \"53\": {\n        loc: {\n          start: {\n            line: 248,\n            column: 8\n          },\n          end: {\n            line: 252,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 248,\n            column: 8\n          },\n          end: {\n            line: 252,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 248,\n            column: 8\n          },\n          end: {\n            line: 252,\n            column: 2\n          }\n        }],\n        line: 248\n      },\n      \"54\": {\n        loc: {\n          start: {\n            line: 256,\n            column: 1\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 256,\n            column: 1\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 256,\n            column: 1\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        }],\n        line: 256\n      },\n      \"55\": {\n        loc: {\n          start: {\n            line: 258,\n            column: 8\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 258,\n            column: 8\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 258,\n            column: 8\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        }],\n        line: 258\n      },\n      \"56\": {\n        loc: {\n          start: {\n            line: 260,\n            column: 8\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 260,\n            column: 8\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 260,\n            column: 8\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        }],\n        line: 260\n      },\n      \"57\": {\n        loc: {\n          start: {\n            line: 262,\n            column: 8\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 262,\n            column: 8\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 262,\n            column: 8\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        }],\n        line: 262\n      },\n      \"58\": {\n        loc: {\n          start: {\n            line: 266,\n            column: 8\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 266,\n            column: 8\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 266,\n            column: 8\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        }],\n        line: 266\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0,\n      \"20\": 0,\n      \"21\": 0,\n      \"22\": 0,\n      \"23\": 0,\n      \"24\": 0,\n      \"25\": 0,\n      \"26\": 0,\n      \"27\": 0,\n      \"28\": 0,\n      \"29\": 0,\n      \"30\": 0,\n      \"31\": 0,\n      \"32\": 0,\n      \"33\": 0,\n      \"34\": 0,\n      \"35\": 0,\n      \"36\": 0,\n      \"37\": 0,\n      \"38\": 0,\n      \"39\": 0,\n      \"40\": 0,\n      \"41\": 0,\n      \"42\": 0,\n      \"43\": 0,\n      \"44\": 0,\n      \"45\": 0,\n      \"46\": 0,\n      \"47\": 0,\n      \"48\": 0,\n      \"49\": 0,\n      \"50\": 0,\n      \"51\": 0,\n      \"52\": 0,\n      \"53\": 0,\n      \"54\": 0,\n      \"55\": 0,\n      \"56\": 0,\n      \"57\": 0,\n      \"58\": 0,\n      \"59\": 0,\n      \"60\": 0,\n      \"61\": 0,\n      \"62\": 0,\n      \"63\": 0,\n      \"64\": 0,\n      \"65\": 0,\n      \"66\": 0,\n      \"67\": 0,\n      \"68\": 0,\n      \"69\": 0,\n      \"70\": 0,\n      \"71\": 0,\n      \"72\": 0,\n      \"73\": 0,\n      \"74\": 0,\n      \"75\": 0,\n      \"76\": 0,\n      \"77\": 0,\n      \"78\": 0,\n      \"79\": 0,\n      \"80\": 0,\n      \"81\": 0,\n      \"82\": 0,\n      \"83\": 0,\n      \"84\": 0,\n      \"85\": 0,\n      \"86\": 0,\n      \"87\": 0,\n      \"88\": 0,\n      \"89\": 0,\n      \"90\": 0,\n      \"91\": 0,\n      \"92\": 0,\n      \"93\": 0,\n      \"94\": 0,\n      \"95\": 0,\n      \"96\": 0,\n      \"97\": 0,\n      \"98\": 0,\n      \"99\": 0,\n      \"100\": 0,\n      \"101\": 0,\n      \"102\": 0,\n      \"103\": 0,\n      \"104\": 0,\n      \"105\": 0,\n      \"106\": 0,\n      \"107\": 0,\n      \"108\": 0,\n      \"109\": 0,\n      \"110\": 0,\n      \"111\": 0,\n      \"112\": 0,\n      \"113\": 0,\n      \"114\": 0,\n      \"115\": 0,\n      \"116\": 0,\n      \"117\": 0,\n      \"118\": 0,\n      \"119\": 0,\n      \"120\": 0,\n      \"121\": 0,\n      \"122\": 0,\n      \"123\": 0,\n      \"124\": 0,\n      \"125\": 0,\n      \"126\": 0,\n      \"127\": 0,\n      \"128\": 0,\n      \"129\": 0,\n      \"130\": 0,\n      \"131\": 0,\n      \"132\": 0,\n      \"133\": 0,\n      \"134\": 0,\n      \"135\": 0,\n      \"136\": 0,\n      \"137\": 0,\n      \"138\": 0,\n      \"139\": 0,\n      \"140\": 0,\n      \"141\": 0,\n      \"142\": 0,\n      \"143\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0],\n      \"3\": [0, 0],\n      \"4\": [0, 0],\n      \"5\": [0, 0],\n      \"6\": [0, 0],\n      \"7\": [0, 0],\n      \"8\": [0, 0],\n      \"9\": [0, 0],\n      \"10\": [0, 0],\n      \"11\": [0, 0],\n      \"12\": [0, 0],\n      \"13\": [0, 0],\n      \"14\": [0, 0],\n      \"15\": [0, 0],\n      \"16\": [0, 0],\n      \"17\": [0, 0],\n      \"18\": [0, 0],\n      \"19\": [0, 0],\n      \"20\": [0, 0],\n      \"21\": [0, 0],\n      \"22\": [0, 0, 0],\n      \"23\": [0, 0],\n      \"24\": [0, 0],\n      \"25\": [0, 0, 0, 0],\n      \"26\": [0, 0],\n      \"27\": [0, 0],\n      \"28\": [0, 0],\n      \"29\": [0, 0, 0],\n      \"30\": [0, 0],\n      \"31\": [0, 0, 0, 0],\n      \"32\": [0, 0],\n      \"33\": [0, 0],\n      \"34\": [0, 0],\n      \"35\": [0, 0],\n      \"36\": [0, 0],\n      \"37\": [0, 0],\n      \"38\": [0, 0],\n      \"39\": [0, 0],\n      \"40\": [0, 0],\n      \"41\": [0, 0],\n      \"42\": [0, 0],\n      \"43\": [0, 0],\n      \"44\": [0, 0],\n      \"45\": [0, 0],\n      \"46\": [0, 0],\n      \"47\": [0, 0],\n      \"48\": [0, 0],\n      \"49\": [0, 0],\n      \"50\": [0, 0, 0, 0, 0],\n      \"51\": [0, 0],\n      \"52\": [0, 0],\n      \"53\": [0, 0],\n      \"54\": [0, 0],\n      \"55\": [0, 0],\n      \"56\": [0, 0],\n      \"57\": [0, 0],\n      \"58\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"cf8a66f19611a0147b39e73a0afe54cb29a37d95\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_2bn3plkn47 = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_2bn3plkn47();\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar EOF = (cov_2bn3plkn47().s[0]++, Symbol(\"EOF\"));\nvar currentToken = (cov_2bn3plkn47().s[1]++, null);\nvar currentAttribute = (cov_2bn3plkn47().s[2]++, null);\nvar currentTextNode;\nvar stack = (cov_2bn3plkn47().s[3]++, [{\n  type: \"document\",\n  children: []\n}]);\n\nfunction emit(token) {\n  cov_2bn3plkn47().f[0]++;\n\n  /*if(token.type === \"text\") \r\n  \treturn;*/\n  var top = (cov_2bn3plkn47().s[4]++, stack[stack.length - 1]);\n  cov_2bn3plkn47().s[5]++;\n\n  if (token.type === \"startTag\") {\n    cov_2bn3plkn47().b[0][0]++;\n    var element = (cov_2bn3plkn47().s[6]++, {\n      type: \"element\",\n      children: [],\n      attributes: []\n    });\n    cov_2bn3plkn47().s[7]++;\n    element.tagName = token.tagName;\n    cov_2bn3plkn47().s[8]++;\n\n    for (var p in token) {\n      cov_2bn3plkn47().s[9]++;\n\n      if ((cov_2bn3plkn47().b[2][0]++, p != \"type\") || (cov_2bn3plkn47().b[2][1]++, p != \"tagName\")) {\n        cov_2bn3plkn47().b[1][0]++;\n        cov_2bn3plkn47().s[10]++;\n        ////\t if(p != \"type\" || p != \"tagName\") {\n        element.attributes.push({\n          name: p,\n          value: token[p]\n        });\n      } else {\n        cov_2bn3plkn47().b[1][1]++;\n      }\n    }\n\n    cov_2bn3plkn47().s[11]++;\n    top.children.push(element);\n    cov_2bn3plkn47().s[12]++;\n    element.parent = top;\n    cov_2bn3plkn47().s[13]++;\n\n    if (!token.isSelfClosing) {\n      cov_2bn3plkn47().b[3][0]++;\n      cov_2bn3plkn47().s[14]++;\n      stack.push(element);\n    } else {\n      cov_2bn3plkn47().b[3][1]++;\n    }\n\n    cov_2bn3plkn47().s[15]++;\n    currentTextNode = null;\n  } else {\n    cov_2bn3plkn47().b[0][1]++;\n    cov_2bn3plkn47().s[16]++;\n\n    if (token.type === \"endTag\") {\n      cov_2bn3plkn47().b[4][0]++;\n      cov_2bn3plkn47().s[17]++;\n\n      if (top.tagName != token.tagName) {\n        cov_2bn3plkn47().b[5][0]++;\n        cov_2bn3plkn47().s[18]++;\n        throw new Error(\"Tag start name doesn't matchCSS ! \");\n      } else {\n        cov_2bn3plkn47().b[5][1]++;\n        cov_2bn3plkn47().s[19]++;\n\n        if (top.tagName === 'style') {\n          cov_2bn3plkn47().b[6][0]++;\n        } else {\n          cov_2bn3plkn47().b[6][1]++;\n        }\n\n        cov_2bn3plkn47().s[20]++;\n        stack.pop();\n      }\n\n      cov_2bn3plkn47().s[21]++;\n      currentTextNode = null;\n    } else {\n      cov_2bn3plkn47().b[4][1]++;\n      cov_2bn3plkn47().s[22]++;\n\n      if (token.type === \"text\") {\n        cov_2bn3plkn47().b[7][0]++;\n        cov_2bn3plkn47().s[23]++;\n\n        if (currentTextNode === null) {\n          cov_2bn3plkn47().b[8][0]++;\n          cov_2bn3plkn47().s[24]++;\n          currentTextNode = {\n            type: \"text\",\n            content: \"\"\n          };\n          cov_2bn3plkn47().s[25]++;\n          top.children.push(currentTextNode);\n        } else {\n          cov_2bn3plkn47().b[8][1]++;\n        }\n\n        cov_2bn3plkn47().s[26]++;\n        currentTextNode.content += token.content;\n      } else {\n        cov_2bn3plkn47().b[7][1]++;\n      }\n    }\n  }\n}\n\nfunction data(c) {\n  cov_2bn3plkn47().f[1]++;\n  cov_2bn3plkn47().s[27]++;\n\n  if (c === '<') {\n    cov_2bn3plkn47().b[9][0]++;\n    cov_2bn3plkn47().s[28]++;\n    return tagOpen;\n  } else {\n    cov_2bn3plkn47().b[9][1]++;\n    cov_2bn3plkn47().s[29]++;\n\n    if (c === EOF) {\n      cov_2bn3plkn47().b[10][0]++;\n      cov_2bn3plkn47().s[30]++;\n      emit({\n        type: \"EOF\"\n      });\n      cov_2bn3plkn47().s[31]++;\n      return;\n    } else {\n      cov_2bn3plkn47().b[10][1]++;\n      cov_2bn3plkn47().s[32]++;\n      emit({\n        type: \"text\",\n        content: c\n      });\n      cov_2bn3plkn47().s[33]++;\n      return data;\n    }\n  }\n}\n\nfunction tagOpen(c) {\n  cov_2bn3plkn47().f[2]++;\n  cov_2bn3plkn47().s[34]++;\n\n  if (c === '/') {\n    cov_2bn3plkn47().b[11][0]++;\n    cov_2bn3plkn47().s[35]++;\n    return endTagOpen;\n  } else {\n    cov_2bn3plkn47().b[11][1]++;\n    cov_2bn3plkn47().s[36]++;\n\n    if (c.match(/^[a-zA-Z]$/)) {\n      cov_2bn3plkn47().b[12][0]++;\n      cov_2bn3plkn47().s[37]++;\n      currentToken = {\n        type: \"startTag\",\n        tagName: \"\"\n      };\n      cov_2bn3plkn47().s[38]++;\n      return tagName(c);\n    } else {\n      cov_2bn3plkn47().b[12][1]++;\n      cov_2bn3plkn47().s[39]++;\n      return;\n    }\n  }\n}\n\nfunction endTagOpen(c) {\n  cov_2bn3plkn47().f[3]++;\n  cov_2bn3plkn47().s[40]++;\n\n  if (c.match(/^[a-zA-Z]$/)) {\n    cov_2bn3plkn47().b[13][0]++;\n    cov_2bn3plkn47().s[41]++;\n    currentToken = {\n      type: \"endTag\",\n      tagName: \"\"\n    };\n    cov_2bn3plkn47().s[42]++;\n    return tagName(c);\n  } else {\n    cov_2bn3plkn47().b[13][1]++;\n    cov_2bn3plkn47().s[43]++;\n\n    if (c == '>') {\n      cov_2bn3plkn47().b[14][0]++;\n    } else {\n      cov_2bn3plkn47().b[14][1]++;\n      cov_2bn3plkn47().s[44]++;\n\n      if (c == EOF) {\n        cov_2bn3plkn47().b[15][0]++;\n      } else {\n        cov_2bn3plkn47().b[15][1]++;\n      }\n    }\n  }\n}\n\nfunction tagName(c) {\n  cov_2bn3plkn47().f[4]++;\n  cov_2bn3plkn47().s[45]++;\n\n  if (c.match(/^[\\t\\n\\f ]$/)) {\n    cov_2bn3plkn47().b[16][0]++;\n    cov_2bn3plkn47().s[46]++;\n    return beforeAttributeName;\n  } else {\n    cov_2bn3plkn47().b[16][1]++;\n    cov_2bn3plkn47().s[47]++;\n\n    if (c == '/') {\n      cov_2bn3plkn47().b[17][0]++;\n      cov_2bn3plkn47().s[48]++;\n      return selfClosingStartTag;\n    } else {\n      cov_2bn3plkn47().b[17][1]++;\n      cov_2bn3plkn47().s[49]++;\n\n      if (c.match(/^[a-zA-Z]$/)) {\n        cov_2bn3plkn47().b[18][0]++;\n        cov_2bn3plkn47().s[50]++;\n        currentToken.tagName += c;\n        cov_2bn3plkn47().s[51]++;\n        return tagName;\n      } else {\n        cov_2bn3plkn47().b[18][1]++;\n        cov_2bn3plkn47().s[52]++;\n\n        if (c == '>') {\n          cov_2bn3plkn47().b[19][0]++;\n          cov_2bn3plkn47().s[53]++;\n          emit(currentToken);\n          cov_2bn3plkn47().s[54]++;\n          return data;\n        } else {\n          cov_2bn3plkn47().b[19][1]++;\n          cov_2bn3plkn47().s[55]++;\n          return tagName;\n        }\n      }\n    }\n  }\n}\n\nfunction beforeAttributeName(c) {\n  cov_2bn3plkn47().f[5]++;\n  cov_2bn3plkn47().s[56]++;\n\n  if (c.match(/^[\\t\\n\\f ]$/)) {\n    cov_2bn3plkn47().b[20][0]++;\n    cov_2bn3plkn47().s[57]++;\n    return beforeAttributeName;\n  } else {\n    cov_2bn3plkn47().b[20][1]++;\n    cov_2bn3plkn47().s[58]++;\n\n    if ((cov_2bn3plkn47().b[22][0]++, c == '/') || (cov_2bn3plkn47().b[22][1]++, c == '>') || (cov_2bn3plkn47().b[22][2]++, c == 'EOF')) {\n      cov_2bn3plkn47().b[21][0]++;\n      cov_2bn3plkn47().s[59]++;\n      return afterAttributeName(c);\n    } else {\n      cov_2bn3plkn47().b[21][1]++;\n      cov_2bn3plkn47().s[60]++;\n\n      if (c == '=') {\n        cov_2bn3plkn47().b[23][0]++;\n      } else {\n        cov_2bn3plkn47().b[23][1]++;\n        cov_2bn3plkn47().s[61]++;\n        currentAttribute = {\n          name: \"\",\n          value: \"\"\n        };\n        cov_2bn3plkn47().s[62]++;\n        return attributeName(c);\n      }\n    }\n  }\n}\n\nfunction attributeName(c) {\n  cov_2bn3plkn47().f[6]++;\n  cov_2bn3plkn47().s[63]++;\n\n  if ((cov_2bn3plkn47().b[25][0]++, c.match(/^[\\t\\n\\f ]$/)) || (cov_2bn3plkn47().b[25][1]++, c == '/') || (cov_2bn3plkn47().b[25][2]++, c == \">\") || (cov_2bn3plkn47().b[25][3]++, c == EOF)) {\n    cov_2bn3plkn47().b[24][0]++;\n    cov_2bn3plkn47().s[64]++;\n    return afterAttributeName(c);\n  } else {\n    cov_2bn3plkn47().b[24][1]++;\n    cov_2bn3plkn47().s[65]++;\n\n    if (c == '=') {\n      cov_2bn3plkn47().b[26][0]++;\n      cov_2bn3plkn47().s[66]++;\n      return beforeAttributeValue;\n    } else {\n      cov_2bn3plkn47().b[26][1]++;\n      cov_2bn3plkn47().s[67]++;\n\n      if (c == \"\\0\") {\n        cov_2bn3plkn47().b[27][0]++;\n      } else {\n        cov_2bn3plkn47().b[27][1]++;\n        cov_2bn3plkn47().s[68]++;\n\n        if ((cov_2bn3plkn47().b[29][0]++, c == '\"') || (cov_2bn3plkn47().b[29][1]++, c == '\\'') || (cov_2bn3plkn47().b[29][2]++, c == '<')) {\n          cov_2bn3plkn47().b[28][0]++;\n        } else {\n          cov_2bn3plkn47().b[28][1]++;\n          cov_2bn3plkn47().s[69]++;\n          currentAttribute.name += c;\n          cov_2bn3plkn47().s[70]++;\n          return attributeName;\n        }\n      }\n    }\n  }\n}\n\nfunction beforeAttributeValue(c) {\n  cov_2bn3plkn47().f[7]++;\n  cov_2bn3plkn47().s[71]++;\n\n  if ((cov_2bn3plkn47().b[31][0]++, c.match(/^[\\t\\n\\f ]$/)) || (cov_2bn3plkn47().b[31][1]++, c == '/') || (cov_2bn3plkn47().b[31][2]++, c == '>') || (cov_2bn3plkn47().b[31][3]++, c == EOF)) {\n    cov_2bn3plkn47().b[30][0]++;\n    cov_2bn3plkn47().s[72]++;\n    return beforeAttributeValue;\n  } else {\n    cov_2bn3plkn47().b[30][1]++;\n    cov_2bn3plkn47().s[73]++;\n\n    if (c == '\\\"') {\n      cov_2bn3plkn47().b[32][0]++;\n      cov_2bn3plkn47().s[74]++;\n      return doubuleQuotedAttributeValue;\n    } else {\n      cov_2bn3plkn47().b[32][1]++;\n      cov_2bn3plkn47().s[75]++;\n\n      if (c == '\\'') {\n        cov_2bn3plkn47().b[33][0]++;\n        cov_2bn3plkn47().s[76]++;\n        return singleQuotedAttributeValue;\n      } else {\n        cov_2bn3plkn47().b[33][1]++;\n        cov_2bn3plkn47().s[77]++;\n\n        if (c == '>') {\n          cov_2bn3plkn47().b[34][0]++;\n        } else {\n          cov_2bn3plkn47().b[34][1]++;\n          cov_2bn3plkn47().s[78]++;\n          return UnquotedAttributeValue(c);\n        }\n      }\n    }\n  }\n}\n\nfunction doubuleQuotedAttributeValue(c) {\n  cov_2bn3plkn47().f[8]++;\n  cov_2bn3plkn47().s[79]++;\n\n  if (c == \"\\\"\") {\n    cov_2bn3plkn47().b[35][0]++;\n    cov_2bn3plkn47().s[80]++;\n    currentToken[currentAttribute.name] = currentAttribute.value;\n    cov_2bn3plkn47().s[81]++;\n    return afterQuotedAttributeValue;\n  } else {\n    cov_2bn3plkn47().b[35][1]++;\n    cov_2bn3plkn47().s[82]++;\n\n    if (c == \"\\0\") {\n      cov_2bn3plkn47().b[36][0]++;\n    } else {\n      cov_2bn3plkn47().b[36][1]++;\n      cov_2bn3plkn47().s[83]++;\n\n      if (c == EOF) {\n        cov_2bn3plkn47().b[37][0]++;\n      } else {\n        cov_2bn3plkn47().b[37][1]++;\n        cov_2bn3plkn47().s[84]++;\n        currentAttribute.value += c;\n        cov_2bn3plkn47().s[85]++;\n        return doubuleQuotedAttributeValue;\n      }\n    }\n  }\n}\n\nfunction singleQuotedAttributeValue(c) {\n  cov_2bn3plkn47().f[9]++;\n  cov_2bn3plkn47().s[86]++;\n\n  if (c == '\\'') {\n    cov_2bn3plkn47().b[38][0]++;\n    cov_2bn3plkn47().s[87]++;\n    currentToken[currentAttribute.name] = currentAttribute.value;\n    cov_2bn3plkn47().s[88]++;\n    return afterQuotedAttributeValue;\n  } else {\n    cov_2bn3plkn47().b[38][1]++;\n    cov_2bn3plkn47().s[89]++;\n\n    if (c == \"\\0\") {\n      cov_2bn3plkn47().b[39][0]++;\n    } else {\n      cov_2bn3plkn47().b[39][1]++;\n      cov_2bn3plkn47().s[90]++;\n\n      if (c == EOF) {\n        cov_2bn3plkn47().b[40][0]++;\n      } else {\n        cov_2bn3plkn47().b[40][1]++;\n        cov_2bn3plkn47().s[91]++;\n        currentAttribute.value += c;\n        cov_2bn3plkn47().s[92]++;\n        return singleQuotedAttributeValue;\n      }\n    }\n  }\n}\n\nfunction afterQuotedAttributeValue(c) {\n  cov_2bn3plkn47().f[10]++;\n  cov_2bn3plkn47().s[93]++;\n\n  if (c.match(/^[\\t\\n\\f ]$/)) {\n    cov_2bn3plkn47().b[41][0]++;\n    cov_2bn3plkn47().s[94]++;\n    return beforeAttributeName;\n  } else {\n    cov_2bn3plkn47().b[41][1]++;\n    cov_2bn3plkn47().s[95]++;\n\n    if (c == '/') {\n      cov_2bn3plkn47().b[42][0]++;\n      cov_2bn3plkn47().s[96]++;\n      return selfClosingStartTag;\n    } else {\n      cov_2bn3plkn47().b[42][1]++;\n      cov_2bn3plkn47().s[97]++;\n\n      if (c == '>') {\n        cov_2bn3plkn47().b[43][0]++;\n        cov_2bn3plkn47().s[98]++;\n        currentToken[currentAttribute.name] = currentAttribute.value;\n        cov_2bn3plkn47().s[99]++;\n        emit(currentToken);\n        cov_2bn3plkn47().s[100]++;\n        return data;\n      } else {\n        cov_2bn3plkn47().b[43][1]++;\n        cov_2bn3plkn47().s[101]++;\n\n        if (c == EOF) {\n          cov_2bn3plkn47().b[44][0]++;\n        } else {\n          cov_2bn3plkn47().b[44][1]++;\n          cov_2bn3plkn47().s[102]++;\n          currentAttribute.value += c;\n          cov_2bn3plkn47().s[103]++;\n          return afterQuotedAttributeValue; //return doubuleQuotedAttributeValue;\n        }\n      }\n    }\n  }\n}\n\nfunction UnquotedAttributeValue(c) {\n  cov_2bn3plkn47().f[11]++;\n  cov_2bn3plkn47().s[104]++;\n\n  if (c.match(/^[\\t\\n\\f ]$/)) {\n    cov_2bn3plkn47().b[45][0]++;\n    cov_2bn3plkn47().s[105]++;\n    currentToken[currentAttribute.name] = currentAttribute.value;\n    cov_2bn3plkn47().s[106]++;\n    return beforeAttributeName;\n  } else {\n    cov_2bn3plkn47().b[45][1]++;\n    cov_2bn3plkn47().s[107]++;\n\n    if (c == '/') {\n      cov_2bn3plkn47().b[46][0]++;\n      cov_2bn3plkn47().s[108]++;\n      currentToken[currentAttribute.name] = currentAttribute.value;\n      cov_2bn3plkn47().s[109]++;\n      return selfClosingStartTag;\n    } else {\n      cov_2bn3plkn47().b[46][1]++;\n      cov_2bn3plkn47().s[110]++;\n\n      if (c == '>') {\n        cov_2bn3plkn47().b[47][0]++;\n        cov_2bn3plkn47().s[111]++;\n        currentToken[currentAttribute.name] = currentAttribute.value;\n        cov_2bn3plkn47().s[112]++;\n        emit(currentToken);\n        cov_2bn3plkn47().s[113]++;\n        return data;\n      } else {\n        cov_2bn3plkn47().b[47][1]++;\n        cov_2bn3plkn47().s[114]++;\n\n        if (c == \"\\0\") {\n          cov_2bn3plkn47().b[48][0]++;\n        } else {\n          cov_2bn3plkn47().b[48][1]++;\n          cov_2bn3plkn47().s[115]++;\n\n          if ((cov_2bn3plkn47().b[50][0]++, c == '\\\"') || (cov_2bn3plkn47().b[50][1]++, c == \"'\") || (cov_2bn3plkn47().b[50][2]++, c == \"<\") || (cov_2bn3plkn47().b[50][3]++, c == '=') || (cov_2bn3plkn47().b[50][4]++, c == '`')) {\n            cov_2bn3plkn47().b[49][0]++;\n          } else {\n            cov_2bn3plkn47().b[49][1]++;\n            cov_2bn3plkn47().s[116]++;\n\n            if (c == EOF) {\n              cov_2bn3plkn47().b[51][0]++;\n            } else {\n              cov_2bn3plkn47().b[51][1]++;\n              cov_2bn3plkn47().s[117]++;\n              currentAttribute.value += c;\n              cov_2bn3plkn47().s[118]++;\n              return UnquotedAttributeValue;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction selfClosingStartTag(c) {\n  cov_2bn3plkn47().f[12]++;\n  cov_2bn3plkn47().s[119]++;\n\n  if (c == \">\") {\n    cov_2bn3plkn47().b[52][0]++;\n    cov_2bn3plkn47().s[120]++;\n    currentToken.isSelfClosing = true;\n    cov_2bn3plkn47().s[121]++;\n    emit(currentToken);\n    cov_2bn3plkn47().s[122]++;\n    return data;\n  } else {\n    cov_2bn3plkn47().b[52][1]++;\n    cov_2bn3plkn47().s[123]++;\n\n    if (c == \"EOF\") {\n      cov_2bn3plkn47().b[53][0]++;\n    } else {\n      cov_2bn3plkn47().b[53][1]++;\n    }\n  }\n}\n\nfunction afterAttributeName(c) {\n  cov_2bn3plkn47().f[13]++;\n  cov_2bn3plkn47().s[124]++;\n\n  if (c.match(/^[\\t\\n\\f ]$/)) {\n    cov_2bn3plkn47().b[54][0]++;\n    cov_2bn3plkn47().s[125]++;\n    return afterAttributeName;\n  } else {\n    cov_2bn3plkn47().b[54][1]++;\n    cov_2bn3plkn47().s[126]++;\n\n    if (c == '/') {\n      cov_2bn3plkn47().b[55][0]++;\n      cov_2bn3plkn47().s[127]++;\n      return selfClosingStartTag;\n    } else {\n      cov_2bn3plkn47().b[55][1]++;\n      cov_2bn3plkn47().s[128]++;\n\n      if (c == '=') {\n        cov_2bn3plkn47().b[56][0]++;\n        cov_2bn3plkn47().s[129]++;\n        return beforeAttributeValue;\n      } else {\n        cov_2bn3plkn47().b[56][1]++;\n        cov_2bn3plkn47().s[130]++;\n\n        if (c == '>') {\n          cov_2bn3plkn47().b[57][0]++;\n          cov_2bn3plkn47().s[131]++;\n          currentToken[currentAttribute.name] = currentAttribute.value;\n          cov_2bn3plkn47().s[132]++;\n          emit(currentToken);\n          cov_2bn3plkn47().s[133]++;\n          return data;\n        } else {\n          cov_2bn3plkn47().b[57][1]++;\n          cov_2bn3plkn47().s[134]++;\n\n          if (c == EOF) {\n            cov_2bn3plkn47().b[58][0]++;\n          } else {\n            cov_2bn3plkn47().b[58][1]++;\n            cov_2bn3plkn47().s[135]++;\n            currentToken[currentAttribute.name] = currentAttribute.value;\n            cov_2bn3plkn47().s[136]++;\n            currentAttribute = {\n              name: \"\",\n              value: \"\"\n            };\n            cov_2bn3plkn47().s[137]++;\n            return attributeName(c);\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction parseHTML(html) {\n  cov_2bn3plkn47().f[14]++;\n  var state = (cov_2bn3plkn47().s[138]++, data);\n  cov_2bn3plkn47().s[139]++;\n\n  var _iterator = _createForOfIteratorHelper(html),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var c = _step.value;\n      cov_2bn3plkn47().s[140]++;\n      state = state(c);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  cov_2bn3plkn47().s[141]++;\n  state = state(EOF);\n  cov_2bn3plkn47().s[142]++;\n  console.log(html);\n  cov_2bn3plkn47().s[143]++;\n  return stack[0];\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": null,
    "sourceType": "script",
    "mtime": 1604144157825
  },
  "{\"sourceMaps\":\"inline\",\"sourceRoot\":\"f:\\\\极客大学前端训练营\\\\Frontend-02-Template\\\\week17\\\\parse-test\\\\test\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"f:\\\\极客大学前端训练营\\\\Frontend-02-Template\\\\week17\\\\parse-test\",\"filename\":\"f:\\\\极客大学前端训练营\\\\Frontend-02-Template\\\\week17\\\\parse-test\\\\test\\\\parse-test.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"f:\\\\极客大学前端训练营\\\\Frontend-02-Template\\\\week17\\\\parse-test\",\"plugins\":[{\"key\":\"f:\\\\极客大学前端训练营\\\\Frontend-02-Template\\\\week17\\\\node_modules\\\\babel-plugin-istanbul\\\\lib\\\\index.js\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceMaps": "inline",
      "sourceRoot": "f:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test\\test\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "f:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test",
      "filename": "f:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test\\test\\parse-test.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "f:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "f:\\极客大学前端训练营\\Frontend-02-Template\\week17\\node_modules\\babel-plugin-istanbul\\lib\\index.js",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "f:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test\\test\\parse-test.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "f:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test\\test\\parse-test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "inline",
        "sourceRoot": "f:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test\\test\\",
        "sourceFileName": "parse-test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _parser = require(\"../src/parser.js\");\n\nvar assert = require(\"assert\");\n\ndescribe(\"parseHTML: \", function () {\n  it(\"<a>asd</a>\", function () {\n    var tree = (0, _parser.parseHTML)('<a>asd</a>');\n    assert.equal(tree.children.length, 1);\n    assert.equal(tree.children[0].type, \"element\");\n    assert.equal(tree.children[0].attributes.length, 0);\n    assert.equal(tree.children[0].children.length, 1);\n  });\n  it(\"<div id=\\\"giao\\\">asd</div>\", function () {\n    var tree = (0, _parser.parseHTML)('<div id=\"giao\">asd</div>');\n    console.log(tree.children[0].attributes.length);\n    assert.equal(tree.children.length, 1);\n    assert.equal(tree.children[0].type, \"element\");\n    assert.equal(tree.children[0].attributes.length, 1);\n    assert.equal(tree.children[0].children.length, 1);\n  });\n  it(\"<div id=\\\"giao\\\" class=\\\"diu\\\">asd</div>\", function () {\n    var tree = (0, _parser.parseHTML)('<div id=\"giao\" class=\"diu\">asd</div>');\n    console.log(tree.children[0].attributes.length);\n    assert.equal(tree.children.length, 1);\n    assert.equal(tree.children[0].type, \"element\");\n    assert.equal(tree.children[0].attributes.length, 2);\n    assert.equal(tree.children[0].children.length, 1);\n  });\n  it(\"<div id=\\\"giao\\\" class=\\\"diu\\\" dd=dd />\", function () {\n    var tree = (0, _parser.parseHTML)('<div id=\"giao\"  class=\"diu\" dd=dd />');\n    console.log(tree.children[0].attributes.length);\n    assert.equal(tree.children.length, 1);\n    assert.equal(tree.children[0].type, \"element\");\n    assert.equal(tree.children[0].attributes.length, 3);\n    assert.equal(tree.children[0].children.length, 0);\n  });\n  it(\"<div id=\\\"giao\\\" class =\\\"diu\\\" dd=dd />\", function () {\n    var tree = (0, _parser.parseHTML)('<div id=\"giao\"  class =\"diu\" dd=dd />');\n    console.log(tree.children[0].attributes.length);\n    assert.equal(tree.children.length, 1);\n    assert.equal(tree.children[0].type, \"element\");\n    assert.equal(tree.children[0].attributes.length, 3);\n    assert.equal(tree.children[0].children.length, 0);\n  });\n  it(\"<div id=\\\"giao\\\" class =\\\"diu\\\"\", function () {\n    var tree = (0, _parser.parseHTML)('<div id=\"giao\"  class =\"diu\"');\n  });\n  it(\"</div id=\\\"giao\\\" class =\\\"diu\\\"\", function () {\n    var tree = (0, _parser.parseHTML)('</div id=\"giao\"  class =\"diu\"');\n  });\n  it(\"<div id=\\'giao\\' class =\\'diu\\' dd=dd/>\", function () {\n    var tree = (0, _parser.parseHTML)(\"<div id='giao'  class ='diu' dd=dd/>\");\n    console.log(tree.children[0].attributes.length);\n    assert.equal(tree.children.length, 1);\n    assert.equal(tree.children[0].type, \"element\");\n    assert.equal(tree.children[0].attributes.length, 3);\n    assert.equal(tree.children[0].children.length, 0);\n  });\n  it(\"<div id= \\'giao\\' class =\\'diu\\' dd=dd/>\", function () {\n    var tree = (0, _parser.parseHTML)(\"<div id= 'giao'  class ='diu' dd=dd/>\");\n    console.log(tree.children[0].attributes.length);\n    assert.equal(tree.children.length, 1);\n    assert.equal(tree.children[0].type, \"element\");\n    assert.equal(tree.children[0].attributes.length, 3);\n    assert.equal(tree.children[0].children.length, 0);\n  });\n  it(\"<div id=\\\"giao\\\" class=\\\"diu\\\" dd=dd/>\", function () {\n    var tree = (0, _parser.parseHTML)('<div id=\"giao\"  class=\"diu\" dd=dd/>');\n    console.log(tree.children[0].attributes.length);\n    assert.equal(tree.children.length, 1);\n    assert.equal(tree.children[0].type, \"element\");\n    assert.equal(tree.children[0].attributes.length, 3);\n    assert.equal(tree.children[0].children.length, 0);\n  });\n  it(\"<div id=\\\"giao\\\" class=\\\"diu\\\" dd=dd></div>\", function () {\n    var tree = (0, _parser.parseHTML)('<div id=\"giao\"  class=\"diu\" dd=dd></div>');\n    console.log(tree.children[0].attributes.length);\n    assert.equal(tree.children.length, 1);\n    assert.equal(tree.children[0].type, \"element\");\n    assert.equal(tree.children[0].attributes.length, 3);\n    assert.equal(tree.children[0].children.length, 0);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": null,
    "sourceType": "script",
    "mtime": 1604231529243
  },
  "{\"sourceMaps\":\"inline\",\"sourceRoot\":\"f:\\\\极客大学前端训练营\\\\Frontend-02-Template\\\\week17\\\\parse-test\\\\src\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"f:\\\\极客大学前端训练营\\\\Frontend-02-Template\\\\week17\\\\parse-test\",\"filename\":\"f:\\\\极客大学前端训练营\\\\Frontend-02-Template\\\\week17\\\\parse-test\\\\src\\\\parser.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"f:\\\\极客大学前端训练营\\\\Frontend-02-Template\\\\week17\\\\parse-test\",\"plugins\":[{\"key\":\"f:\\\\极客大学前端训练营\\\\Frontend-02-Template\\\\week17\\\\node_modules\\\\babel-plugin-istanbul\\\\lib\\\\index.js\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceMaps": "inline",
      "sourceRoot": "f:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test\\src\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "f:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test",
      "filename": "f:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test\\src\\parser.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "f:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "f:\\极客大学前端训练营\\Frontend-02-Template\\week17\\node_modules\\babel-plugin-istanbul\\lib\\index.js",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "f:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test\\src\\parser.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "f:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test\\src\\parser.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "inline",
        "sourceRoot": "f:\\极客大学前端训练营\\Frontend-02-Template\\week17\\parse-test\\src\\",
        "sourceFileName": "parser.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseHTML = parseHTML;\n\nfunction cov_bv2mpbp1p() {\n  var path = \"f:\\\\\\u6781\\u5BA2\\u5927\\u5B66\\u524D\\u7AEF\\u8BAD\\u7EC3\\u8425\\\\Frontend-02-Template\\\\week17\\\\parse-test\\\\src\\\\parser.js\";\n  var hash = \"0078faf14456e5a4b6d92dec340b8be1a1009006\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"f:\\\\\\u6781\\u5BA2\\u5927\\u5B66\\u524D\\u7AEF\\u8BAD\\u7EC3\\u8425\\\\Frontend-02-Template\\\\week17\\\\parse-test\\\\src\\\\parser.js\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 2,\n          column: 12\n        },\n        end: {\n          line: 2,\n          column: 25\n        }\n      },\n      \"1\": {\n        start: {\n          line: 4,\n          column: 19\n        },\n        end: {\n          line: 4,\n          column: 23\n        }\n      },\n      \"2\": {\n        start: {\n          line: 5,\n          column: 23\n        },\n        end: {\n          line: 5,\n          column: 27\n        }\n      },\n      \"3\": {\n        start: {\n          line: 8,\n          column: 12\n        },\n        end: {\n          line: 8,\n          column: 44\n        }\n      },\n      \"4\": {\n        start: {\n          line: 13,\n          column: 11\n        },\n        end: {\n          line: 13,\n          column: 34\n        }\n      },\n      \"5\": {\n        start: {\n          line: 15,\n          column: 1\n        },\n        end: {\n          line: 60,\n          column: 2\n        }\n      },\n      \"6\": {\n        start: {\n          line: 16,\n          column: 16\n        },\n        end: {\n          line: 20,\n          column: 3\n        }\n      },\n      \"7\": {\n        start: {\n          line: 22,\n          column: 2\n        },\n        end: {\n          line: 22,\n          column: 34\n        }\n      },\n      \"8\": {\n        start: {\n          line: 24,\n          column: 2\n        },\n        end: {\n          line: 31,\n          column: 3\n        }\n      },\n      \"9\": {\n        start: {\n          line: 25,\n          column: 3\n        },\n        end: {\n          line: 30,\n          column: 4\n        }\n      },\n      \"10\": {\n        start: {\n          line: 26,\n          column: 4\n        },\n        end: {\n          line: 29,\n          column: 7\n        }\n      },\n      \"11\": {\n        start: {\n          line: 33,\n          column: 2\n        },\n        end: {\n          line: 33,\n          column: 29\n        }\n      },\n      \"12\": {\n        start: {\n          line: 34,\n          column: 2\n        },\n        end: {\n          line: 34,\n          column: 23\n        }\n      },\n      \"13\": {\n        start: {\n          line: 36,\n          column: 2\n        },\n        end: {\n          line: 38,\n          column: 3\n        }\n      },\n      \"14\": {\n        start: {\n          line: 37,\n          column: 3\n        },\n        end: {\n          line: 37,\n          column: 23\n        }\n      },\n      \"15\": {\n        start: {\n          line: 39,\n          column: 2\n        },\n        end: {\n          line: 39,\n          column: 25\n        }\n      },\n      \"16\": {\n        start: {\n          line: 41,\n          column: 8\n        },\n        end: {\n          line: 60,\n          column: 2\n        }\n      },\n      \"17\": {\n        start: {\n          line: 42,\n          column: 2\n        },\n        end: {\n          line: 49,\n          column: 3\n        }\n      },\n      \"18\": {\n        start: {\n          line: 43,\n          column: 3\n        },\n        end: {\n          line: 43,\n          column: 57\n        }\n      },\n      \"19\": {\n        start: {\n          line: 45,\n          column: 3\n        },\n        end: {\n          line: 47,\n          column: 4\n        }\n      },\n      \"20\": {\n        start: {\n          line: 48,\n          column: 3\n        },\n        end: {\n          line: 48,\n          column: 15\n        }\n      },\n      \"21\": {\n        start: {\n          line: 50,\n          column: 2\n        },\n        end: {\n          line: 50,\n          column: 25\n        }\n      },\n      \"22\": {\n        start: {\n          line: 51,\n          column: 8\n        },\n        end: {\n          line: 60,\n          column: 2\n        }\n      },\n      \"23\": {\n        start: {\n          line: 52,\n          column: 2\n        },\n        end: {\n          line: 58,\n          column: 3\n        }\n      },\n      \"24\": {\n        start: {\n          line: 53,\n          column: 3\n        },\n        end: {\n          line: 56,\n          column: 4\n        }\n      },\n      \"25\": {\n        start: {\n          line: 57,\n          column: 3\n        },\n        end: {\n          line: 57,\n          column: 38\n        }\n      },\n      \"26\": {\n        start: {\n          line: 59,\n          column: 2\n        },\n        end: {\n          line: 59,\n          column: 43\n        }\n      },\n      \"27\": {\n        start: {\n          line: 67,\n          column: 2\n        },\n        end: {\n          line: 80,\n          column: 3\n        }\n      },\n      \"28\": {\n        start: {\n          line: 68,\n          column: 6\n        },\n        end: {\n          line: 68,\n          column: 21\n        }\n      },\n      \"29\": {\n        start: {\n          line: 69,\n          column: 9\n        },\n        end: {\n          line: 80,\n          column: 3\n        }\n      },\n      \"30\": {\n        start: {\n          line: 70,\n          column: 2\n        },\n        end: {\n          line: 72,\n          column: 5\n        }\n      },\n      \"31\": {\n        start: {\n          line: 73,\n          column: 2\n        },\n        end: {\n          line: 73,\n          column: 10\n        }\n      },\n      \"32\": {\n        start: {\n          line: 75,\n          column: 3\n        },\n        end: {\n          line: 78,\n          column: 5\n        }\n      },\n      \"33\": {\n        start: {\n          line: 79,\n          column: 5\n        },\n        end: {\n          line: 79,\n          column: 17\n        }\n      },\n      \"34\": {\n        start: {\n          line: 84,\n          column: 2\n        },\n        end: {\n          line: 94,\n          column: 3\n        }\n      },\n      \"35\": {\n        start: {\n          line: 85,\n          column: 5\n        },\n        end: {\n          line: 85,\n          column: 23\n        }\n      },\n      \"36\": {\n        start: {\n          line: 86,\n          column: 9\n        },\n        end: {\n          line: 94,\n          column: 3\n        }\n      },\n      \"37\": {\n        start: {\n          line: 87,\n          column: 4\n        },\n        end: {\n          line: 90,\n          column: 5\n        }\n      },\n      \"38\": {\n        start: {\n          line: 91,\n          column: 5\n        },\n        end: {\n          line: 91,\n          column: 23\n        }\n      },\n      \"39\": {\n        start: {\n          line: 93,\n          column: 5\n        },\n        end: {\n          line: 93,\n          column: 13\n        }\n      },\n      \"40\": {\n        start: {\n          line: 98,\n          column: 2\n        },\n        end: {\n          line: 110,\n          column: 3\n        }\n      },\n      \"41\": {\n        start: {\n          line: 99,\n          column: 4\n        },\n        end: {\n          line: 102,\n          column: 5\n        }\n      },\n      \"42\": {\n        start: {\n          line: 103,\n          column: 5\n        },\n        end: {\n          line: 103,\n          column: 23\n        }\n      },\n      \"43\": {\n        start: {\n          line: 104,\n          column: 9\n        },\n        end: {\n          line: 110,\n          column: 3\n        }\n      },\n      \"44\": {\n        start: {\n          line: 106,\n          column: 9\n        },\n        end: {\n          line: 110,\n          column: 3\n        }\n      },\n      \"45\": {\n        start: {\n          line: 114,\n          column: 1\n        },\n        end: {\n          line: 126,\n          column: 4\n        }\n      },\n      \"46\": {\n        start: {\n          line: 115,\n          column: 2\n        },\n        end: {\n          line: 115,\n          column: 29\n        }\n      },\n      \"47\": {\n        start: {\n          line: 116,\n          column: 8\n        },\n        end: {\n          line: 126,\n          column: 4\n        }\n      },\n      \"48\": {\n        start: {\n          line: 117,\n          column: 4\n        },\n        end: {\n          line: 117,\n          column: 31\n        }\n      },\n      \"49\": {\n        start: {\n          line: 118,\n          column: 10\n        },\n        end: {\n          line: 126,\n          column: 4\n        }\n      },\n      \"50\": {\n        start: {\n          line: 119,\n          column: 5\n        },\n        end: {\n          line: 119,\n          column: 31\n        }\n      },\n      \"51\": {\n        start: {\n          line: 120,\n          column: 3\n        },\n        end: {\n          line: 120,\n          column: 18\n        }\n      },\n      \"52\": {\n        start: {\n          line: 121,\n          column: 10\n        },\n        end: {\n          line: 126,\n          column: 4\n        }\n      },\n      \"53\": {\n        start: {\n          line: 122,\n          column: 4\n        },\n        end: {\n          line: 122,\n          column: 23\n        }\n      },\n      \"54\": {\n        start: {\n          line: 123,\n          column: 4\n        },\n        end: {\n          line: 123,\n          column: 16\n        }\n      },\n      \"55\": {\n        start: {\n          line: 125,\n          column: 4\n        },\n        end: {\n          line: 125,\n          column: 19\n        }\n      },\n      \"56\": {\n        start: {\n          line: 130,\n          column: 1\n        },\n        end: {\n          line: 142,\n          column: 2\n        }\n      },\n      \"57\": {\n        start: {\n          line: 131,\n          column: 2\n        },\n        end: {\n          line: 131,\n          column: 29\n        }\n      },\n      \"58\": {\n        start: {\n          line: 132,\n          column: 8\n        },\n        end: {\n          line: 142,\n          column: 2\n        }\n      },\n      \"59\": {\n        start: {\n          line: 133,\n          column: 2\n        },\n        end: {\n          line: 133,\n          column: 31\n        }\n      },\n      \"60\": {\n        start: {\n          line: 134,\n          column: 8\n        },\n        end: {\n          line: 142,\n          column: 2\n        }\n      },\n      \"61\": {\n        start: {\n          line: 137,\n          column: 2\n        },\n        end: {\n          line: 140,\n          column: 3\n        }\n      },\n      \"62\": {\n        start: {\n          line: 141,\n          column: 2\n        },\n        end: {\n          line: 141,\n          column: 26\n        }\n      },\n      \"63\": {\n        start: {\n          line: 146,\n          column: 1\n        },\n        end: {\n          line: 157,\n          column: 2\n        }\n      },\n      \"64\": {\n        start: {\n          line: 147,\n          column: 2\n        },\n        end: {\n          line: 147,\n          column: 31\n        }\n      },\n      \"65\": {\n        start: {\n          line: 148,\n          column: 8\n        },\n        end: {\n          line: 157,\n          column: 2\n        }\n      },\n      \"66\": {\n        start: {\n          line: 149,\n          column: 2\n        },\n        end: {\n          line: 149,\n          column: 30\n        }\n      },\n      \"67\": {\n        start: {\n          line: 150,\n          column: 8\n        },\n        end: {\n          line: 157,\n          column: 2\n        }\n      },\n      \"68\": {\n        start: {\n          line: 152,\n          column: 8\n        },\n        end: {\n          line: 157,\n          column: 2\n        }\n      },\n      \"69\": {\n        start: {\n          line: 155,\n          column: 2\n        },\n        end: {\n          line: 155,\n          column: 29\n        }\n      },\n      \"70\": {\n        start: {\n          line: 156,\n          column: 2\n        },\n        end: {\n          line: 156,\n          column: 23\n        }\n      },\n      \"71\": {\n        start: {\n          line: 161,\n          column: 1\n        },\n        end: {\n          line: 171,\n          column: 2\n        }\n      },\n      \"72\": {\n        start: {\n          line: 162,\n          column: 2\n        },\n        end: {\n          line: 162,\n          column: 30\n        }\n      },\n      \"73\": {\n        start: {\n          line: 163,\n          column: 8\n        },\n        end: {\n          line: 171,\n          column: 2\n        }\n      },\n      \"74\": {\n        start: {\n          line: 164,\n          column: 2\n        },\n        end: {\n          line: 164,\n          column: 37\n        }\n      },\n      \"75\": {\n        start: {\n          line: 165,\n          column: 8\n        },\n        end: {\n          line: 171,\n          column: 2\n        }\n      },\n      \"76\": {\n        start: {\n          line: 166,\n          column: 2\n        },\n        end: {\n          line: 166,\n          column: 36\n        }\n      },\n      \"77\": {\n        start: {\n          line: 167,\n          column: 8\n        },\n        end: {\n          line: 171,\n          column: 2\n        }\n      },\n      \"78\": {\n        start: {\n          line: 170,\n          column: 2\n        },\n        end: {\n          line: 170,\n          column: 35\n        }\n      },\n      \"79\": {\n        start: {\n          line: 175,\n          column: 1\n        },\n        end: {\n          line: 185,\n          column: 2\n        }\n      },\n      \"80\": {\n        start: {\n          line: 176,\n          column: 2\n        },\n        end: {\n          line: 176,\n          column: 63\n        }\n      },\n      \"81\": {\n        start: {\n          line: 177,\n          column: 2\n        },\n        end: {\n          line: 177,\n          column: 35\n        }\n      },\n      \"82\": {\n        start: {\n          line: 178,\n          column: 8\n        },\n        end: {\n          line: 185,\n          column: 2\n        }\n      },\n      \"83\": {\n        start: {\n          line: 180,\n          column: 8\n        },\n        end: {\n          line: 185,\n          column: 2\n        }\n      },\n      \"84\": {\n        start: {\n          line: 183,\n          column: 2\n        },\n        end: {\n          line: 183,\n          column: 30\n        }\n      },\n      \"85\": {\n        start: {\n          line: 184,\n          column: 2\n        },\n        end: {\n          line: 184,\n          column: 37\n        }\n      },\n      \"86\": {\n        start: {\n          line: 189,\n          column: 1\n        },\n        end: {\n          line: 199,\n          column: 2\n        }\n      },\n      \"87\": {\n        start: {\n          line: 190,\n          column: 2\n        },\n        end: {\n          line: 190,\n          column: 63\n        }\n      },\n      \"88\": {\n        start: {\n          line: 191,\n          column: 2\n        },\n        end: {\n          line: 191,\n          column: 35\n        }\n      },\n      \"89\": {\n        start: {\n          line: 192,\n          column: 8\n        },\n        end: {\n          line: 199,\n          column: 2\n        }\n      },\n      \"90\": {\n        start: {\n          line: 194,\n          column: 8\n        },\n        end: {\n          line: 199,\n          column: 2\n        }\n      },\n      \"91\": {\n        start: {\n          line: 197,\n          column: 2\n        },\n        end: {\n          line: 197,\n          column: 30\n        }\n      },\n      \"92\": {\n        start: {\n          line: 198,\n          column: 2\n        },\n        end: {\n          line: 198,\n          column: 36\n        }\n      },\n      \"93\": {\n        start: {\n          line: 203,\n          column: 1\n        },\n        end: {\n          line: 216,\n          column: 2\n        }\n      },\n      \"94\": {\n        start: {\n          line: 204,\n          column: 2\n        },\n        end: {\n          line: 204,\n          column: 29\n        }\n      },\n      \"95\": {\n        start: {\n          line: 205,\n          column: 8\n        },\n        end: {\n          line: 216,\n          column: 2\n        }\n      },\n      \"96\": {\n        start: {\n          line: 206,\n          column: 2\n        },\n        end: {\n          line: 206,\n          column: 29\n        }\n      },\n      \"97\": {\n        start: {\n          line: 207,\n          column: 8\n        },\n        end: {\n          line: 216,\n          column: 2\n        }\n      },\n      \"98\": {\n        start: {\n          line: 208,\n          column: 2\n        },\n        end: {\n          line: 208,\n          column: 63\n        }\n      },\n      \"99\": {\n        start: {\n          line: 209,\n          column: 2\n        },\n        end: {\n          line: 209,\n          column: 21\n        }\n      },\n      \"100\": {\n        start: {\n          line: 210,\n          column: 2\n        },\n        end: {\n          line: 210,\n          column: 14\n        }\n      },\n      \"101\": {\n        start: {\n          line: 211,\n          column: 8\n        },\n        end: {\n          line: 216,\n          column: 2\n        }\n      },\n      \"102\": {\n        start: {\n          line: 214,\n          column: 2\n        },\n        end: {\n          line: 214,\n          column: 30\n        }\n      },\n      \"103\": {\n        start: {\n          line: 215,\n          column: 2\n        },\n        end: {\n          line: 215,\n          column: 35\n        }\n      },\n      \"104\": {\n        start: {\n          line: 220,\n          column: 1\n        },\n        end: {\n          line: 239,\n          column: 2\n        }\n      },\n      \"105\": {\n        start: {\n          line: 221,\n          column: 2\n        },\n        end: {\n          line: 221,\n          column: 63\n        }\n      },\n      \"106\": {\n        start: {\n          line: 222,\n          column: 2\n        },\n        end: {\n          line: 222,\n          column: 29\n        }\n      },\n      \"107\": {\n        start: {\n          line: 223,\n          column: 8\n        },\n        end: {\n          line: 239,\n          column: 2\n        }\n      },\n      \"108\": {\n        start: {\n          line: 224,\n          column: 2\n        },\n        end: {\n          line: 224,\n          column: 63\n        }\n      },\n      \"109\": {\n        start: {\n          line: 225,\n          column: 2\n        },\n        end: {\n          line: 225,\n          column: 29\n        }\n      },\n      \"110\": {\n        start: {\n          line: 226,\n          column: 8\n        },\n        end: {\n          line: 239,\n          column: 2\n        }\n      },\n      \"111\": {\n        start: {\n          line: 227,\n          column: 2\n        },\n        end: {\n          line: 227,\n          column: 63\n        }\n      },\n      \"112\": {\n        start: {\n          line: 228,\n          column: 2\n        },\n        end: {\n          line: 228,\n          column: 21\n        }\n      },\n      \"113\": {\n        start: {\n          line: 229,\n          column: 2\n        },\n        end: {\n          line: 229,\n          column: 14\n        }\n      },\n      \"114\": {\n        start: {\n          line: 230,\n          column: 8\n        },\n        end: {\n          line: 239,\n          column: 2\n        }\n      },\n      \"115\": {\n        start: {\n          line: 232,\n          column: 8\n        },\n        end: {\n          line: 239,\n          column: 2\n        }\n      },\n      \"116\": {\n        start: {\n          line: 234,\n          column: 8\n        },\n        end: {\n          line: 239,\n          column: 2\n        }\n      },\n      \"117\": {\n        start: {\n          line: 237,\n          column: 2\n        },\n        end: {\n          line: 237,\n          column: 30\n        }\n      },\n      \"118\": {\n        start: {\n          line: 238,\n          column: 2\n        },\n        end: {\n          line: 238,\n          column: 32\n        }\n      },\n      \"119\": {\n        start: {\n          line: 244,\n          column: 1\n        },\n        end: {\n          line: 252,\n          column: 2\n        }\n      },\n      \"120\": {\n        start: {\n          line: 245,\n          column: 2\n        },\n        end: {\n          line: 245,\n          column: 36\n        }\n      },\n      \"121\": {\n        start: {\n          line: 246,\n          column: 2\n        },\n        end: {\n          line: 246,\n          column: 21\n        }\n      },\n      \"122\": {\n        start: {\n          line: 247,\n          column: 2\n        },\n        end: {\n          line: 247,\n          column: 14\n        }\n      },\n      \"123\": {\n        start: {\n          line: 248,\n          column: 8\n        },\n        end: {\n          line: 252,\n          column: 2\n        }\n      },\n      \"124\": {\n        start: {\n          line: 256,\n          column: 1\n        },\n        end: {\n          line: 275,\n          column: 2\n        }\n      },\n      \"125\": {\n        start: {\n          line: 257,\n          column: 2\n        },\n        end: {\n          line: 257,\n          column: 28\n        }\n      },\n      \"126\": {\n        start: {\n          line: 258,\n          column: 8\n        },\n        end: {\n          line: 275,\n          column: 2\n        }\n      },\n      \"127\": {\n        start: {\n          line: 259,\n          column: 2\n        },\n        end: {\n          line: 259,\n          column: 29\n        }\n      },\n      \"128\": {\n        start: {\n          line: 260,\n          column: 8\n        },\n        end: {\n          line: 275,\n          column: 2\n        }\n      },\n      \"129\": {\n        start: {\n          line: 261,\n          column: 2\n        },\n        end: {\n          line: 261,\n          column: 30\n        }\n      },\n      \"130\": {\n        start: {\n          line: 262,\n          column: 8\n        },\n        end: {\n          line: 275,\n          column: 2\n        }\n      },\n      \"131\": {\n        start: {\n          line: 263,\n          column: 2\n        },\n        end: {\n          line: 263,\n          column: 63\n        }\n      },\n      \"132\": {\n        start: {\n          line: 264,\n          column: 2\n        },\n        end: {\n          line: 264,\n          column: 21\n        }\n      },\n      \"133\": {\n        start: {\n          line: 265,\n          column: 2\n        },\n        end: {\n          line: 265,\n          column: 14\n        }\n      },\n      \"134\": {\n        start: {\n          line: 266,\n          column: 8\n        },\n        end: {\n          line: 275,\n          column: 2\n        }\n      },\n      \"135\": {\n        start: {\n          line: 269,\n          column: 2\n        },\n        end: {\n          line: 269,\n          column: 63\n        }\n      },\n      \"136\": {\n        start: {\n          line: 270,\n          column: 2\n        },\n        end: {\n          line: 273,\n          column: 4\n        }\n      },\n      \"137\": {\n        start: {\n          line: 274,\n          column: 2\n        },\n        end: {\n          line: 274,\n          column: 26\n        }\n      },\n      \"138\": {\n        start: {\n          line: 279,\n          column: 1\n        },\n        end: {\n          line: 279,\n          column: 21\n        }\n      },\n      \"139\": {\n        start: {\n          line: 280,\n          column: 1\n        },\n        end: {\n          line: 280,\n          column: 25\n        }\n      },\n      \"140\": {\n        start: {\n          line: 281,\n          column: 1\n        },\n        end: {\n          line: 281,\n          column: 17\n        }\n      },\n      \"141\": {\n        start: {\n          line: 283,\n          column: 1\n        },\n        end: {\n          line: 283,\n          column: 42\n        }\n      },\n      \"142\": {\n        start: {\n          line: 284,\n          column: 16\n        },\n        end: {\n          line: 284,\n          column: 20\n        }\n      },\n      \"143\": {\n        start: {\n          line: 285,\n          column: 4\n        },\n        end: {\n          line: 287,\n          column: 5\n        }\n      },\n      \"144\": {\n        start: {\n          line: 286,\n          column: 8\n        },\n        end: {\n          line: 286,\n          column: 25\n        }\n      },\n      \"145\": {\n        start: {\n          line: 288,\n          column: 4\n        },\n        end: {\n          line: 288,\n          column: 23\n        }\n      },\n      \"146\": {\n        start: {\n          line: 289,\n          column: 3\n        },\n        end: {\n          line: 289,\n          column: 21\n        }\n      },\n      \"147\": {\n        start: {\n          line: 291,\n          column: 1\n        },\n        end: {\n          line: 291,\n          column: 17\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"emit\",\n        decl: {\n          start: {\n            line: 10,\n            column: 9\n          },\n          end: {\n            line: 10,\n            column: 13\n          }\n        },\n        loc: {\n          start: {\n            line: 10,\n            column: 21\n          },\n          end: {\n            line: 61,\n            column: 1\n          }\n        },\n        line: 10\n      },\n      \"1\": {\n        name: \"data\",\n        decl: {\n          start: {\n            line: 66,\n            column: 9\n          },\n          end: {\n            line: 66,\n            column: 13\n          }\n        },\n        loc: {\n          start: {\n            line: 66,\n            column: 16\n          },\n          end: {\n            line: 81,\n            column: 1\n          }\n        },\n        line: 66\n      },\n      \"2\": {\n        name: \"tagOpen\",\n        decl: {\n          start: {\n            line: 83,\n            column: 9\n          },\n          end: {\n            line: 83,\n            column: 16\n          }\n        },\n        loc: {\n          start: {\n            line: 83,\n            column: 19\n          },\n          end: {\n            line: 95,\n            column: 1\n          }\n        },\n        line: 83\n      },\n      \"3\": {\n        name: \"endTagOpen\",\n        decl: {\n          start: {\n            line: 97,\n            column: 9\n          },\n          end: {\n            line: 97,\n            column: 19\n          }\n        },\n        loc: {\n          start: {\n            line: 97,\n            column: 22\n          },\n          end: {\n            line: 111,\n            column: 1\n          }\n        },\n        line: 97\n      },\n      \"4\": {\n        name: \"tagName\",\n        decl: {\n          start: {\n            line: 113,\n            column: 9\n          },\n          end: {\n            line: 113,\n            column: 16\n          }\n        },\n        loc: {\n          start: {\n            line: 113,\n            column: 19\n          },\n          end: {\n            line: 127,\n            column: 1\n          }\n        },\n        line: 113\n      },\n      \"5\": {\n        name: \"beforeAttributeName\",\n        decl: {\n          start: {\n            line: 129,\n            column: 9\n          },\n          end: {\n            line: 129,\n            column: 28\n          }\n        },\n        loc: {\n          start: {\n            line: 129,\n            column: 31\n          },\n          end: {\n            line: 143,\n            column: 1\n          }\n        },\n        line: 129\n      },\n      \"6\": {\n        name: \"attributeName\",\n        decl: {\n          start: {\n            line: 145,\n            column: 9\n          },\n          end: {\n            line: 145,\n            column: 22\n          }\n        },\n        loc: {\n          start: {\n            line: 145,\n            column: 25\n          },\n          end: {\n            line: 158,\n            column: 1\n          }\n        },\n        line: 145\n      },\n      \"7\": {\n        name: \"beforeAttributeValue\",\n        decl: {\n          start: {\n            line: 160,\n            column: 9\n          },\n          end: {\n            line: 160,\n            column: 29\n          }\n        },\n        loc: {\n          start: {\n            line: 160,\n            column: 33\n          },\n          end: {\n            line: 172,\n            column: 1\n          }\n        },\n        line: 160\n      },\n      \"8\": {\n        name: \"doubuleQuotedAttributeValue\",\n        decl: {\n          start: {\n            line: 174,\n            column: 9\n          },\n          end: {\n            line: 174,\n            column: 36\n          }\n        },\n        loc: {\n          start: {\n            line: 174,\n            column: 39\n          },\n          end: {\n            line: 186,\n            column: 1\n          }\n        },\n        line: 174\n      },\n      \"9\": {\n        name: \"singleQuotedAttributeValue\",\n        decl: {\n          start: {\n            line: 188,\n            column: 9\n          },\n          end: {\n            line: 188,\n            column: 35\n          }\n        },\n        loc: {\n          start: {\n            line: 188,\n            column: 38\n          },\n          end: {\n            line: 200,\n            column: 1\n          }\n        },\n        line: 188\n      },\n      \"10\": {\n        name: \"afterQuotedAttributeValue\",\n        decl: {\n          start: {\n            line: 202,\n            column: 9\n          },\n          end: {\n            line: 202,\n            column: 34\n          }\n        },\n        loc: {\n          start: {\n            line: 202,\n            column: 37\n          },\n          end: {\n            line: 217,\n            column: 1\n          }\n        },\n        line: 202\n      },\n      \"11\": {\n        name: \"UnquotedAttributeValue\",\n        decl: {\n          start: {\n            line: 219,\n            column: 9\n          },\n          end: {\n            line: 219,\n            column: 31\n          }\n        },\n        loc: {\n          start: {\n            line: 219,\n            column: 34\n          },\n          end: {\n            line: 241,\n            column: 1\n          }\n        },\n        line: 219\n      },\n      \"12\": {\n        name: \"selfClosingStartTag\",\n        decl: {\n          start: {\n            line: 243,\n            column: 9\n          },\n          end: {\n            line: 243,\n            column: 28\n          }\n        },\n        loc: {\n          start: {\n            line: 243,\n            column: 31\n          },\n          end: {\n            line: 253,\n            column: 1\n          }\n        },\n        line: 243\n      },\n      \"13\": {\n        name: \"afterAttributeName\",\n        decl: {\n          start: {\n            line: 255,\n            column: 9\n          },\n          end: {\n            line: 255,\n            column: 27\n          }\n        },\n        loc: {\n          start: {\n            line: 255,\n            column: 30\n          },\n          end: {\n            line: 276,\n            column: 1\n          }\n        },\n        line: 255\n      },\n      \"14\": {\n        name: \"parseHTML\",\n        decl: {\n          start: {\n            line: 278,\n            column: 16\n          },\n          end: {\n            line: 278,\n            column: 25\n          }\n        },\n        loc: {\n          start: {\n            line: 278,\n            column: 32\n          },\n          end: {\n            line: 292,\n            column: 1\n          }\n        },\n        line: 278\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 15,\n            column: 1\n          },\n          end: {\n            line: 60,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 15,\n            column: 1\n          },\n          end: {\n            line: 60,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 15,\n            column: 1\n          },\n          end: {\n            line: 60,\n            column: 2\n          }\n        }],\n        line: 15\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 25,\n            column: 3\n          },\n          end: {\n            line: 30,\n            column: 4\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 25,\n            column: 3\n          },\n          end: {\n            line: 30,\n            column: 4\n          }\n        }, {\n          start: {\n            line: 25,\n            column: 3\n          },\n          end: {\n            line: 30,\n            column: 4\n          }\n        }],\n        line: 25\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 25,\n            column: 6\n          },\n          end: {\n            line: 25,\n            column: 57\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 25,\n            column: 6\n          },\n          end: {\n            line: 25,\n            column: 17\n          }\n        }, {\n          start: {\n            line: 25,\n            column: 21\n          },\n          end: {\n            line: 25,\n            column: 35\n          }\n        }, {\n          start: {\n            line: 25,\n            column: 39\n          },\n          end: {\n            line: 25,\n            column: 57\n          }\n        }],\n        line: 25\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 36,\n            column: 2\n          },\n          end: {\n            line: 38,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 36,\n            column: 2\n          },\n          end: {\n            line: 38,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 36,\n            column: 2\n          },\n          end: {\n            line: 38,\n            column: 3\n          }\n        }],\n        line: 36\n      },\n      \"4\": {\n        loc: {\n          start: {\n            line: 41,\n            column: 8\n          },\n          end: {\n            line: 60,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 41,\n            column: 8\n          },\n          end: {\n            line: 60,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 41,\n            column: 8\n          },\n          end: {\n            line: 60,\n            column: 2\n          }\n        }],\n        line: 41\n      },\n      \"5\": {\n        loc: {\n          start: {\n            line: 42,\n            column: 2\n          },\n          end: {\n            line: 49,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 42,\n            column: 2\n          },\n          end: {\n            line: 49,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 42,\n            column: 2\n          },\n          end: {\n            line: 49,\n            column: 3\n          }\n        }],\n        line: 42\n      },\n      \"6\": {\n        loc: {\n          start: {\n            line: 45,\n            column: 3\n          },\n          end: {\n            line: 47,\n            column: 4\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 45,\n            column: 3\n          },\n          end: {\n            line: 47,\n            column: 4\n          }\n        }, {\n          start: {\n            line: 45,\n            column: 3\n          },\n          end: {\n            line: 47,\n            column: 4\n          }\n        }],\n        line: 45\n      },\n      \"7\": {\n        loc: {\n          start: {\n            line: 51,\n            column: 8\n          },\n          end: {\n            line: 60,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 51,\n            column: 8\n          },\n          end: {\n            line: 60,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 51,\n            column: 8\n          },\n          end: {\n            line: 60,\n            column: 2\n          }\n        }],\n        line: 51\n      },\n      \"8\": {\n        loc: {\n          start: {\n            line: 52,\n            column: 2\n          },\n          end: {\n            line: 58,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 52,\n            column: 2\n          },\n          end: {\n            line: 58,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 52,\n            column: 2\n          },\n          end: {\n            line: 58,\n            column: 3\n          }\n        }],\n        line: 52\n      },\n      \"9\": {\n        loc: {\n          start: {\n            line: 67,\n            column: 2\n          },\n          end: {\n            line: 80,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 67,\n            column: 2\n          },\n          end: {\n            line: 80,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 67,\n            column: 2\n          },\n          end: {\n            line: 80,\n            column: 3\n          }\n        }],\n        line: 67\n      },\n      \"10\": {\n        loc: {\n          start: {\n            line: 69,\n            column: 9\n          },\n          end: {\n            line: 80,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 69,\n            column: 9\n          },\n          end: {\n            line: 80,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 69,\n            column: 9\n          },\n          end: {\n            line: 80,\n            column: 3\n          }\n        }],\n        line: 69\n      },\n      \"11\": {\n        loc: {\n          start: {\n            line: 84,\n            column: 2\n          },\n          end: {\n            line: 94,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 84,\n            column: 2\n          },\n          end: {\n            line: 94,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 84,\n            column: 2\n          },\n          end: {\n            line: 94,\n            column: 3\n          }\n        }],\n        line: 84\n      },\n      \"12\": {\n        loc: {\n          start: {\n            line: 86,\n            column: 9\n          },\n          end: {\n            line: 94,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 86,\n            column: 9\n          },\n          end: {\n            line: 94,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 86,\n            column: 9\n          },\n          end: {\n            line: 94,\n            column: 3\n          }\n        }],\n        line: 86\n      },\n      \"13\": {\n        loc: {\n          start: {\n            line: 98,\n            column: 2\n          },\n          end: {\n            line: 110,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 98,\n            column: 2\n          },\n          end: {\n            line: 110,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 98,\n            column: 2\n          },\n          end: {\n            line: 110,\n            column: 3\n          }\n        }],\n        line: 98\n      },\n      \"14\": {\n        loc: {\n          start: {\n            line: 104,\n            column: 9\n          },\n          end: {\n            line: 110,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 104,\n            column: 9\n          },\n          end: {\n            line: 110,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 104,\n            column: 9\n          },\n          end: {\n            line: 110,\n            column: 3\n          }\n        }],\n        line: 104\n      },\n      \"15\": {\n        loc: {\n          start: {\n            line: 106,\n            column: 9\n          },\n          end: {\n            line: 110,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 106,\n            column: 9\n          },\n          end: {\n            line: 110,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 106,\n            column: 9\n          },\n          end: {\n            line: 110,\n            column: 3\n          }\n        }],\n        line: 106\n      },\n      \"16\": {\n        loc: {\n          start: {\n            line: 114,\n            column: 1\n          },\n          end: {\n            line: 126,\n            column: 4\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 114,\n            column: 1\n          },\n          end: {\n            line: 126,\n            column: 4\n          }\n        }, {\n          start: {\n            line: 114,\n            column: 1\n          },\n          end: {\n            line: 126,\n            column: 4\n          }\n        }],\n        line: 114\n      },\n      \"17\": {\n        loc: {\n          start: {\n            line: 116,\n            column: 8\n          },\n          end: {\n            line: 126,\n            column: 4\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 116,\n            column: 8\n          },\n          end: {\n            line: 126,\n            column: 4\n          }\n        }, {\n          start: {\n            line: 116,\n            column: 8\n          },\n          end: {\n            line: 126,\n            column: 4\n          }\n        }],\n        line: 116\n      },\n      \"18\": {\n        loc: {\n          start: {\n            line: 118,\n            column: 10\n          },\n          end: {\n            line: 126,\n            column: 4\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 118,\n            column: 10\n          },\n          end: {\n            line: 126,\n            column: 4\n          }\n        }, {\n          start: {\n            line: 118,\n            column: 10\n          },\n          end: {\n            line: 126,\n            column: 4\n          }\n        }],\n        line: 118\n      },\n      \"19\": {\n        loc: {\n          start: {\n            line: 121,\n            column: 10\n          },\n          end: {\n            line: 126,\n            column: 4\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 121,\n            column: 10\n          },\n          end: {\n            line: 126,\n            column: 4\n          }\n        }, {\n          start: {\n            line: 121,\n            column: 10\n          },\n          end: {\n            line: 126,\n            column: 4\n          }\n        }],\n        line: 121\n      },\n      \"20\": {\n        loc: {\n          start: {\n            line: 130,\n            column: 1\n          },\n          end: {\n            line: 142,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 130,\n            column: 1\n          },\n          end: {\n            line: 142,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 130,\n            column: 1\n          },\n          end: {\n            line: 142,\n            column: 2\n          }\n        }],\n        line: 130\n      },\n      \"21\": {\n        loc: {\n          start: {\n            line: 132,\n            column: 8\n          },\n          end: {\n            line: 142,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 132,\n            column: 8\n          },\n          end: {\n            line: 142,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 132,\n            column: 8\n          },\n          end: {\n            line: 142,\n            column: 2\n          }\n        }],\n        line: 132\n      },\n      \"22\": {\n        loc: {\n          start: {\n            line: 132,\n            column: 11\n          },\n          end: {\n            line: 132,\n            column: 45\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 132,\n            column: 11\n          },\n          end: {\n            line: 132,\n            column: 19\n          }\n        }, {\n          start: {\n            line: 132,\n            column: 23\n          },\n          end: {\n            line: 132,\n            column: 31\n          }\n        }, {\n          start: {\n            line: 132,\n            column: 35\n          },\n          end: {\n            line: 132,\n            column: 45\n          }\n        }],\n        line: 132\n      },\n      \"23\": {\n        loc: {\n          start: {\n            line: 134,\n            column: 8\n          },\n          end: {\n            line: 142,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 134,\n            column: 8\n          },\n          end: {\n            line: 142,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 134,\n            column: 8\n          },\n          end: {\n            line: 142,\n            column: 2\n          }\n        }],\n        line: 134\n      },\n      \"24\": {\n        loc: {\n          start: {\n            line: 146,\n            column: 1\n          },\n          end: {\n            line: 157,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 146,\n            column: 1\n          },\n          end: {\n            line: 157,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 146,\n            column: 1\n          },\n          end: {\n            line: 157,\n            column: 2\n          }\n        }],\n        line: 146\n      },\n      \"25\": {\n        loc: {\n          start: {\n            line: 146,\n            column: 4\n          },\n          end: {\n            line: 146,\n            column: 62\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 146,\n            column: 4\n          },\n          end: {\n            line: 146,\n            column: 26\n          }\n        }, {\n          start: {\n            line: 146,\n            column: 30\n          },\n          end: {\n            line: 146,\n            column: 38\n          }\n        }, {\n          start: {\n            line: 146,\n            column: 42\n          },\n          end: {\n            line: 146,\n            column: 50\n          }\n        }, {\n          start: {\n            line: 146,\n            column: 54\n          },\n          end: {\n            line: 146,\n            column: 62\n          }\n        }],\n        line: 146\n      },\n      \"26\": {\n        loc: {\n          start: {\n            line: 148,\n            column: 8\n          },\n          end: {\n            line: 157,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 148,\n            column: 8\n          },\n          end: {\n            line: 157,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 148,\n            column: 8\n          },\n          end: {\n            line: 157,\n            column: 2\n          }\n        }],\n        line: 148\n      },\n      \"27\": {\n        loc: {\n          start: {\n            line: 150,\n            column: 8\n          },\n          end: {\n            line: 157,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 150,\n            column: 8\n          },\n          end: {\n            line: 157,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 150,\n            column: 8\n          },\n          end: {\n            line: 157,\n            column: 2\n          }\n        }],\n        line: 150\n      },\n      \"28\": {\n        loc: {\n          start: {\n            line: 152,\n            column: 8\n          },\n          end: {\n            line: 157,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 152,\n            column: 8\n          },\n          end: {\n            line: 157,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 152,\n            column: 8\n          },\n          end: {\n            line: 157,\n            column: 2\n          }\n        }],\n        line: 152\n      },\n      \"29\": {\n        loc: {\n          start: {\n            line: 152,\n            column: 11\n          },\n          end: {\n            line: 152,\n            column: 44\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 152,\n            column: 11\n          },\n          end: {\n            line: 152,\n            column: 19\n          }\n        }, {\n          start: {\n            line: 152,\n            column: 23\n          },\n          end: {\n            line: 152,\n            column: 32\n          }\n        }, {\n          start: {\n            line: 152,\n            column: 36\n          },\n          end: {\n            line: 152,\n            column: 44\n          }\n        }],\n        line: 152\n      },\n      \"30\": {\n        loc: {\n          start: {\n            line: 161,\n            column: 1\n          },\n          end: {\n            line: 171,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 161,\n            column: 1\n          },\n          end: {\n            line: 171,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 161,\n            column: 1\n          },\n          end: {\n            line: 171,\n            column: 2\n          }\n        }],\n        line: 161\n      },\n      \"31\": {\n        loc: {\n          start: {\n            line: 161,\n            column: 4\n          },\n          end: {\n            line: 161,\n            column: 61\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 161,\n            column: 4\n          },\n          end: {\n            line: 161,\n            column: 26\n          }\n        }, {\n          start: {\n            line: 161,\n            column: 30\n          },\n          end: {\n            line: 161,\n            column: 37\n          }\n        }, {\n          start: {\n            line: 161,\n            column: 41\n          },\n          end: {\n            line: 161,\n            column: 49\n          }\n        }, {\n          start: {\n            line: 161,\n            column: 53\n          },\n          end: {\n            line: 161,\n            column: 61\n          }\n        }],\n        line: 161\n      },\n      \"32\": {\n        loc: {\n          start: {\n            line: 163,\n            column: 8\n          },\n          end: {\n            line: 171,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 163,\n            column: 8\n          },\n          end: {\n            line: 171,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 163,\n            column: 8\n          },\n          end: {\n            line: 171,\n            column: 2\n          }\n        }],\n        line: 163\n      },\n      \"33\": {\n        loc: {\n          start: {\n            line: 165,\n            column: 8\n          },\n          end: {\n            line: 171,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 165,\n            column: 8\n          },\n          end: {\n            line: 171,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 165,\n            column: 8\n          },\n          end: {\n            line: 171,\n            column: 2\n          }\n        }],\n        line: 165\n      },\n      \"34\": {\n        loc: {\n          start: {\n            line: 167,\n            column: 8\n          },\n          end: {\n            line: 171,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 167,\n            column: 8\n          },\n          end: {\n            line: 171,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 167,\n            column: 8\n          },\n          end: {\n            line: 171,\n            column: 2\n          }\n        }],\n        line: 167\n      },\n      \"35\": {\n        loc: {\n          start: {\n            line: 175,\n            column: 1\n          },\n          end: {\n            line: 185,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 175,\n            column: 1\n          },\n          end: {\n            line: 185,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 175,\n            column: 1\n          },\n          end: {\n            line: 185,\n            column: 2\n          }\n        }],\n        line: 175\n      },\n      \"36\": {\n        loc: {\n          start: {\n            line: 178,\n            column: 8\n          },\n          end: {\n            line: 185,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 178,\n            column: 8\n          },\n          end: {\n            line: 185,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 178,\n            column: 8\n          },\n          end: {\n            line: 185,\n            column: 2\n          }\n        }],\n        line: 178\n      },\n      \"37\": {\n        loc: {\n          start: {\n            line: 180,\n            column: 8\n          },\n          end: {\n            line: 185,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 180,\n            column: 8\n          },\n          end: {\n            line: 185,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 180,\n            column: 8\n          },\n          end: {\n            line: 185,\n            column: 2\n          }\n        }],\n        line: 180\n      },\n      \"38\": {\n        loc: {\n          start: {\n            line: 189,\n            column: 1\n          },\n          end: {\n            line: 199,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 189,\n            column: 1\n          },\n          end: {\n            line: 199,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 189,\n            column: 1\n          },\n          end: {\n            line: 199,\n            column: 2\n          }\n        }],\n        line: 189\n      },\n      \"39\": {\n        loc: {\n          start: {\n            line: 192,\n            column: 8\n          },\n          end: {\n            line: 199,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 192,\n            column: 8\n          },\n          end: {\n            line: 199,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 192,\n            column: 8\n          },\n          end: {\n            line: 199,\n            column: 2\n          }\n        }],\n        line: 192\n      },\n      \"40\": {\n        loc: {\n          start: {\n            line: 194,\n            column: 8\n          },\n          end: {\n            line: 199,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 194,\n            column: 8\n          },\n          end: {\n            line: 199,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 194,\n            column: 8\n          },\n          end: {\n            line: 199,\n            column: 2\n          }\n        }],\n        line: 194\n      },\n      \"41\": {\n        loc: {\n          start: {\n            line: 203,\n            column: 1\n          },\n          end: {\n            line: 216,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 203,\n            column: 1\n          },\n          end: {\n            line: 216,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 203,\n            column: 1\n          },\n          end: {\n            line: 216,\n            column: 2\n          }\n        }],\n        line: 203\n      },\n      \"42\": {\n        loc: {\n          start: {\n            line: 205,\n            column: 8\n          },\n          end: {\n            line: 216,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 205,\n            column: 8\n          },\n          end: {\n            line: 216,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 205,\n            column: 8\n          },\n          end: {\n            line: 216,\n            column: 2\n          }\n        }],\n        line: 205\n      },\n      \"43\": {\n        loc: {\n          start: {\n            line: 207,\n            column: 8\n          },\n          end: {\n            line: 216,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 207,\n            column: 8\n          },\n          end: {\n            line: 216,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 207,\n            column: 8\n          },\n          end: {\n            line: 216,\n            column: 2\n          }\n        }],\n        line: 207\n      },\n      \"44\": {\n        loc: {\n          start: {\n            line: 211,\n            column: 8\n          },\n          end: {\n            line: 216,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 211,\n            column: 8\n          },\n          end: {\n            line: 216,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 211,\n            column: 8\n          },\n          end: {\n            line: 216,\n            column: 2\n          }\n        }],\n        line: 211\n      },\n      \"45\": {\n        loc: {\n          start: {\n            line: 220,\n            column: 1\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 220,\n            column: 1\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 220,\n            column: 1\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        }],\n        line: 220\n      },\n      \"46\": {\n        loc: {\n          start: {\n            line: 223,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 223,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 223,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        }],\n        line: 223\n      },\n      \"47\": {\n        loc: {\n          start: {\n            line: 226,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 226,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 226,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        }],\n        line: 226\n      },\n      \"48\": {\n        loc: {\n          start: {\n            line: 230,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 230,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 230,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        }],\n        line: 230\n      },\n      \"49\": {\n        loc: {\n          start: {\n            line: 232,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 232,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 232,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        }],\n        line: 232\n      },\n      \"50\": {\n        loc: {\n          start: {\n            line: 232,\n            column: 11\n          },\n          end: {\n            line: 232,\n            column: 68\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 232,\n            column: 11\n          },\n          end: {\n            line: 232,\n            column: 20\n          }\n        }, {\n          start: {\n            line: 232,\n            column: 24\n          },\n          end: {\n            line: 232,\n            column: 32\n          }\n        }, {\n          start: {\n            line: 232,\n            column: 36\n          },\n          end: {\n            line: 232,\n            column: 44\n          }\n        }, {\n          start: {\n            line: 232,\n            column: 48\n          },\n          end: {\n            line: 232,\n            column: 56\n          }\n        }, {\n          start: {\n            line: 232,\n            column: 60\n          },\n          end: {\n            line: 232,\n            column: 68\n          }\n        }],\n        line: 232\n      },\n      \"51\": {\n        loc: {\n          start: {\n            line: 234,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 234,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 234,\n            column: 8\n          },\n          end: {\n            line: 239,\n            column: 2\n          }\n        }],\n        line: 234\n      },\n      \"52\": {\n        loc: {\n          start: {\n            line: 244,\n            column: 1\n          },\n          end: {\n            line: 252,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 244,\n            column: 1\n          },\n          end: {\n            line: 252,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 244,\n            column: 1\n          },\n          end: {\n            line: 252,\n            column: 2\n          }\n        }],\n        line: 244\n      },\n      \"53\": {\n        loc: {\n          start: {\n            line: 248,\n            column: 8\n          },\n          end: {\n            line: 252,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 248,\n            column: 8\n          },\n          end: {\n            line: 252,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 248,\n            column: 8\n          },\n          end: {\n            line: 252,\n            column: 2\n          }\n        }],\n        line: 248\n      },\n      \"54\": {\n        loc: {\n          start: {\n            line: 256,\n            column: 1\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 256,\n            column: 1\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 256,\n            column: 1\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        }],\n        line: 256\n      },\n      \"55\": {\n        loc: {\n          start: {\n            line: 258,\n            column: 8\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 258,\n            column: 8\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 258,\n            column: 8\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        }],\n        line: 258\n      },\n      \"56\": {\n        loc: {\n          start: {\n            line: 260,\n            column: 8\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 260,\n            column: 8\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 260,\n            column: 8\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        }],\n        line: 260\n      },\n      \"57\": {\n        loc: {\n          start: {\n            line: 262,\n            column: 8\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 262,\n            column: 8\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 262,\n            column: 8\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        }],\n        line: 262\n      },\n      \"58\": {\n        loc: {\n          start: {\n            line: 266,\n            column: 8\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 266,\n            column: 8\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        }, {\n          start: {\n            line: 266,\n            column: 8\n          },\n          end: {\n            line: 275,\n            column: 2\n          }\n        }],\n        line: 266\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0,\n      \"20\": 0,\n      \"21\": 0,\n      \"22\": 0,\n      \"23\": 0,\n      \"24\": 0,\n      \"25\": 0,\n      \"26\": 0,\n      \"27\": 0,\n      \"28\": 0,\n      \"29\": 0,\n      \"30\": 0,\n      \"31\": 0,\n      \"32\": 0,\n      \"33\": 0,\n      \"34\": 0,\n      \"35\": 0,\n      \"36\": 0,\n      \"37\": 0,\n      \"38\": 0,\n      \"39\": 0,\n      \"40\": 0,\n      \"41\": 0,\n      \"42\": 0,\n      \"43\": 0,\n      \"44\": 0,\n      \"45\": 0,\n      \"46\": 0,\n      \"47\": 0,\n      \"48\": 0,\n      \"49\": 0,\n      \"50\": 0,\n      \"51\": 0,\n      \"52\": 0,\n      \"53\": 0,\n      \"54\": 0,\n      \"55\": 0,\n      \"56\": 0,\n      \"57\": 0,\n      \"58\": 0,\n      \"59\": 0,\n      \"60\": 0,\n      \"61\": 0,\n      \"62\": 0,\n      \"63\": 0,\n      \"64\": 0,\n      \"65\": 0,\n      \"66\": 0,\n      \"67\": 0,\n      \"68\": 0,\n      \"69\": 0,\n      \"70\": 0,\n      \"71\": 0,\n      \"72\": 0,\n      \"73\": 0,\n      \"74\": 0,\n      \"75\": 0,\n      \"76\": 0,\n      \"77\": 0,\n      \"78\": 0,\n      \"79\": 0,\n      \"80\": 0,\n      \"81\": 0,\n      \"82\": 0,\n      \"83\": 0,\n      \"84\": 0,\n      \"85\": 0,\n      \"86\": 0,\n      \"87\": 0,\n      \"88\": 0,\n      \"89\": 0,\n      \"90\": 0,\n      \"91\": 0,\n      \"92\": 0,\n      \"93\": 0,\n      \"94\": 0,\n      \"95\": 0,\n      \"96\": 0,\n      \"97\": 0,\n      \"98\": 0,\n      \"99\": 0,\n      \"100\": 0,\n      \"101\": 0,\n      \"102\": 0,\n      \"103\": 0,\n      \"104\": 0,\n      \"105\": 0,\n      \"106\": 0,\n      \"107\": 0,\n      \"108\": 0,\n      \"109\": 0,\n      \"110\": 0,\n      \"111\": 0,\n      \"112\": 0,\n      \"113\": 0,\n      \"114\": 0,\n      \"115\": 0,\n      \"116\": 0,\n      \"117\": 0,\n      \"118\": 0,\n      \"119\": 0,\n      \"120\": 0,\n      \"121\": 0,\n      \"122\": 0,\n      \"123\": 0,\n      \"124\": 0,\n      \"125\": 0,\n      \"126\": 0,\n      \"127\": 0,\n      \"128\": 0,\n      \"129\": 0,\n      \"130\": 0,\n      \"131\": 0,\n      \"132\": 0,\n      \"133\": 0,\n      \"134\": 0,\n      \"135\": 0,\n      \"136\": 0,\n      \"137\": 0,\n      \"138\": 0,\n      \"139\": 0,\n      \"140\": 0,\n      \"141\": 0,\n      \"142\": 0,\n      \"143\": 0,\n      \"144\": 0,\n      \"145\": 0,\n      \"146\": 0,\n      \"147\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0, 0],\n      \"3\": [0, 0],\n      \"4\": [0, 0],\n      \"5\": [0, 0],\n      \"6\": [0, 0],\n      \"7\": [0, 0],\n      \"8\": [0, 0],\n      \"9\": [0, 0],\n      \"10\": [0, 0],\n      \"11\": [0, 0],\n      \"12\": [0, 0],\n      \"13\": [0, 0],\n      \"14\": [0, 0],\n      \"15\": [0, 0],\n      \"16\": [0, 0],\n      \"17\": [0, 0],\n      \"18\": [0, 0],\n      \"19\": [0, 0],\n      \"20\": [0, 0],\n      \"21\": [0, 0],\n      \"22\": [0, 0, 0],\n      \"23\": [0, 0],\n      \"24\": [0, 0],\n      \"25\": [0, 0, 0, 0],\n      \"26\": [0, 0],\n      \"27\": [0, 0],\n      \"28\": [0, 0],\n      \"29\": [0, 0, 0],\n      \"30\": [0, 0],\n      \"31\": [0, 0, 0, 0],\n      \"32\": [0, 0],\n      \"33\": [0, 0],\n      \"34\": [0, 0],\n      \"35\": [0, 0],\n      \"36\": [0, 0],\n      \"37\": [0, 0],\n      \"38\": [0, 0],\n      \"39\": [0, 0],\n      \"40\": [0, 0],\n      \"41\": [0, 0],\n      \"42\": [0, 0],\n      \"43\": [0, 0],\n      \"44\": [0, 0],\n      \"45\": [0, 0],\n      \"46\": [0, 0],\n      \"47\": [0, 0],\n      \"48\": [0, 0],\n      \"49\": [0, 0],\n      \"50\": [0, 0, 0, 0, 0],\n      \"51\": [0, 0],\n      \"52\": [0, 0],\n      \"53\": [0, 0],\n      \"54\": [0, 0],\n      \"55\": [0, 0],\n      \"56\": [0, 0],\n      \"57\": [0, 0],\n      \"58\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"0078faf14456e5a4b6d92dec340b8be1a1009006\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_bv2mpbp1p = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_bv2mpbp1p();\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar EOF = (cov_bv2mpbp1p().s[0]++, Symbol(\"EOF\"));\nvar currentToken = (cov_bv2mpbp1p().s[1]++, null);\nvar currentAttribute = (cov_bv2mpbp1p().s[2]++, null);\nvar currentTextNode;\nvar stack = (cov_bv2mpbp1p().s[3]++, [{\n  type: \"document\",\n  children: []\n}]);\n\nfunction emit(token) {\n  cov_bv2mpbp1p().f[0]++;\n\n  /*if(token.type === \"text\") \r\n  \treturn;*/\n  var top = (cov_bv2mpbp1p().s[4]++, stack[stack.length - 1]);\n  cov_bv2mpbp1p().s[5]++;\n\n  if (token.type === \"startTag\") {\n    cov_bv2mpbp1p().b[0][0]++;\n    var element = (cov_bv2mpbp1p().s[6]++, {\n      type: \"element\",\n      children: [],\n      attributes: []\n    });\n    cov_bv2mpbp1p().s[7]++;\n    element.tagName = token.tagName;\n    cov_bv2mpbp1p().s[8]++;\n\n    for (var p in token) {\n      cov_bv2mpbp1p().s[9]++;\n\n      if ((cov_bv2mpbp1p().b[2][0]++, p != \"type\") && (cov_bv2mpbp1p().b[2][1]++, p != \"tagName\") && (cov_bv2mpbp1p().b[2][2]++, p != \"isSelfClosing\")) {\n        cov_bv2mpbp1p().b[1][0]++;\n        cov_bv2mpbp1p().s[10]++;\n        ////\t if(p != \"type\" || p != \"tagName\") {\n        element.attributes.push({\n          name: p,\n          value: token[p]\n        });\n      } else {\n        cov_bv2mpbp1p().b[1][1]++;\n      }\n    }\n\n    cov_bv2mpbp1p().s[11]++;\n    top.children.push(element);\n    cov_bv2mpbp1p().s[12]++;\n    element.parent = top;\n    cov_bv2mpbp1p().s[13]++;\n\n    if (!token.isSelfClosing) {\n      cov_bv2mpbp1p().b[3][0]++;\n      cov_bv2mpbp1p().s[14]++;\n      stack.push(element);\n    } else {\n      cov_bv2mpbp1p().b[3][1]++;\n    }\n\n    cov_bv2mpbp1p().s[15]++;\n    currentTextNode = null;\n  } else {\n    cov_bv2mpbp1p().b[0][1]++;\n    cov_bv2mpbp1p().s[16]++;\n\n    if (token.type === \"endTag\") {\n      cov_bv2mpbp1p().b[4][0]++;\n      cov_bv2mpbp1p().s[17]++;\n\n      if (top.tagName != token.tagName) {\n        cov_bv2mpbp1p().b[5][0]++;\n        cov_bv2mpbp1p().s[18]++;\n        throw new Error(\"Tag start name doesn't matchCSS ! \");\n      } else {\n        cov_bv2mpbp1p().b[5][1]++;\n        cov_bv2mpbp1p().s[19]++;\n\n        if (top.tagName === 'style') {\n          cov_bv2mpbp1p().b[6][0]++;\n        } else {\n          cov_bv2mpbp1p().b[6][1]++;\n        }\n\n        cov_bv2mpbp1p().s[20]++;\n        stack.pop();\n      }\n\n      cov_bv2mpbp1p().s[21]++;\n      currentTextNode = null;\n    } else {\n      cov_bv2mpbp1p().b[4][1]++;\n      cov_bv2mpbp1p().s[22]++;\n\n      if (token.type === \"text\") {\n        cov_bv2mpbp1p().b[7][0]++;\n        cov_bv2mpbp1p().s[23]++;\n\n        if (currentTextNode === null) {\n          cov_bv2mpbp1p().b[8][0]++;\n          cov_bv2mpbp1p().s[24]++;\n          currentTextNode = {\n            type: \"text\",\n            content: \"\"\n          };\n          cov_bv2mpbp1p().s[25]++;\n          top.children.push(currentTextNode);\n        } else {\n          cov_bv2mpbp1p().b[8][1]++;\n        }\n\n        cov_bv2mpbp1p().s[26]++;\n        currentTextNode.content += token.content;\n      } else {\n        cov_bv2mpbp1p().b[7][1]++;\n      }\n    }\n  }\n}\n\nfunction data(c) {\n  cov_bv2mpbp1p().f[1]++;\n  cov_bv2mpbp1p().s[27]++;\n\n  if (c === '<') {\n    cov_bv2mpbp1p().b[9][0]++;\n    cov_bv2mpbp1p().s[28]++;\n    return tagOpen;\n  } else {\n    cov_bv2mpbp1p().b[9][1]++;\n    cov_bv2mpbp1p().s[29]++;\n\n    if (c === EOF) {\n      cov_bv2mpbp1p().b[10][0]++;\n      cov_bv2mpbp1p().s[30]++;\n      emit({\n        type: \"EOF\"\n      });\n      cov_bv2mpbp1p().s[31]++;\n      return;\n    } else {\n      cov_bv2mpbp1p().b[10][1]++;\n      cov_bv2mpbp1p().s[32]++;\n      emit({\n        type: \"text\",\n        content: c\n      });\n      cov_bv2mpbp1p().s[33]++;\n      return data;\n    }\n  }\n}\n\nfunction tagOpen(c) {\n  cov_bv2mpbp1p().f[2]++;\n  cov_bv2mpbp1p().s[34]++;\n\n  if (c === '/') {\n    cov_bv2mpbp1p().b[11][0]++;\n    cov_bv2mpbp1p().s[35]++;\n    return endTagOpen;\n  } else {\n    cov_bv2mpbp1p().b[11][1]++;\n    cov_bv2mpbp1p().s[36]++;\n\n    if (c.match(/^[a-zA-Z]$/)) {\n      cov_bv2mpbp1p().b[12][0]++;\n      cov_bv2mpbp1p().s[37]++;\n      currentToken = {\n        type: \"startTag\",\n        tagName: \"\"\n      };\n      cov_bv2mpbp1p().s[38]++;\n      return tagName(c);\n    } else {\n      cov_bv2mpbp1p().b[12][1]++;\n      cov_bv2mpbp1p().s[39]++;\n      return;\n    }\n  }\n}\n\nfunction endTagOpen(c) {\n  cov_bv2mpbp1p().f[3]++;\n  cov_bv2mpbp1p().s[40]++;\n\n  if (c.match(/^[a-zA-Z]$/)) {\n    cov_bv2mpbp1p().b[13][0]++;\n    cov_bv2mpbp1p().s[41]++;\n    currentToken = {\n      type: \"endTag\",\n      tagName: \"\"\n    };\n    cov_bv2mpbp1p().s[42]++;\n    return tagName(c);\n  } else {\n    cov_bv2mpbp1p().b[13][1]++;\n    cov_bv2mpbp1p().s[43]++;\n\n    if (c == '>') {\n      cov_bv2mpbp1p().b[14][0]++;\n    } else {\n      cov_bv2mpbp1p().b[14][1]++;\n      cov_bv2mpbp1p().s[44]++;\n\n      if (c == EOF) {\n        cov_bv2mpbp1p().b[15][0]++;\n      } else {\n        cov_bv2mpbp1p().b[15][1]++;\n      }\n    }\n  }\n}\n\nfunction tagName(c) {\n  cov_bv2mpbp1p().f[4]++;\n  cov_bv2mpbp1p().s[45]++;\n\n  if (c.match(/^[\\t\\n\\f ]$/)) {\n    cov_bv2mpbp1p().b[16][0]++;\n    cov_bv2mpbp1p().s[46]++;\n    return beforeAttributeName;\n  } else {\n    cov_bv2mpbp1p().b[16][1]++;\n    cov_bv2mpbp1p().s[47]++;\n\n    if (c == '/') {\n      cov_bv2mpbp1p().b[17][0]++;\n      cov_bv2mpbp1p().s[48]++;\n      return selfClosingStartTag;\n    } else {\n      cov_bv2mpbp1p().b[17][1]++;\n      cov_bv2mpbp1p().s[49]++;\n\n      if (c.match(/^[a-zA-Z]$/)) {\n        cov_bv2mpbp1p().b[18][0]++;\n        cov_bv2mpbp1p().s[50]++;\n        currentToken.tagName += c;\n        cov_bv2mpbp1p().s[51]++;\n        return tagName;\n      } else {\n        cov_bv2mpbp1p().b[18][1]++;\n        cov_bv2mpbp1p().s[52]++;\n\n        if (c == '>') {\n          cov_bv2mpbp1p().b[19][0]++;\n          cov_bv2mpbp1p().s[53]++;\n          emit(currentToken);\n          cov_bv2mpbp1p().s[54]++;\n          return data;\n        } else {\n          cov_bv2mpbp1p().b[19][1]++;\n          cov_bv2mpbp1p().s[55]++;\n          return tagName;\n        }\n      }\n    }\n  }\n}\n\nfunction beforeAttributeName(c) {\n  cov_bv2mpbp1p().f[5]++;\n  cov_bv2mpbp1p().s[56]++;\n\n  if (c.match(/^[\\t\\n\\f ]$/)) {\n    cov_bv2mpbp1p().b[20][0]++;\n    cov_bv2mpbp1p().s[57]++;\n    return beforeAttributeName;\n  } else {\n    cov_bv2mpbp1p().b[20][1]++;\n    cov_bv2mpbp1p().s[58]++;\n\n    if ((cov_bv2mpbp1p().b[22][0]++, c == '/') || (cov_bv2mpbp1p().b[22][1]++, c == '>') || (cov_bv2mpbp1p().b[22][2]++, c == 'EOF')) {\n      cov_bv2mpbp1p().b[21][0]++;\n      cov_bv2mpbp1p().s[59]++;\n      return afterAttributeName(c);\n    } else {\n      cov_bv2mpbp1p().b[21][1]++;\n      cov_bv2mpbp1p().s[60]++;\n\n      if (c == '=') {\n        cov_bv2mpbp1p().b[23][0]++;\n      } else {\n        cov_bv2mpbp1p().b[23][1]++;\n        cov_bv2mpbp1p().s[61]++;\n        currentAttribute = {\n          name: \"\",\n          value: \"\"\n        };\n        cov_bv2mpbp1p().s[62]++;\n        return attributeName(c);\n      }\n    }\n  }\n}\n\nfunction attributeName(c) {\n  cov_bv2mpbp1p().f[6]++;\n  cov_bv2mpbp1p().s[63]++;\n\n  if ((cov_bv2mpbp1p().b[25][0]++, c.match(/^[\\t\\n\\f ]$/)) || (cov_bv2mpbp1p().b[25][1]++, c == '/') || (cov_bv2mpbp1p().b[25][2]++, c == \">\") || (cov_bv2mpbp1p().b[25][3]++, c == EOF)) {\n    cov_bv2mpbp1p().b[24][0]++;\n    cov_bv2mpbp1p().s[64]++;\n    return afterAttributeName(c);\n  } else {\n    cov_bv2mpbp1p().b[24][1]++;\n    cov_bv2mpbp1p().s[65]++;\n\n    if (c == '=') {\n      cov_bv2mpbp1p().b[26][0]++;\n      cov_bv2mpbp1p().s[66]++;\n      return beforeAttributeValue;\n    } else {\n      cov_bv2mpbp1p().b[26][1]++;\n      cov_bv2mpbp1p().s[67]++;\n\n      if (c == \"\\0\") {\n        cov_bv2mpbp1p().b[27][0]++;\n      } else {\n        cov_bv2mpbp1p().b[27][1]++;\n        cov_bv2mpbp1p().s[68]++;\n\n        if ((cov_bv2mpbp1p().b[29][0]++, c == '\"') || (cov_bv2mpbp1p().b[29][1]++, c == '\\'') || (cov_bv2mpbp1p().b[29][2]++, c == '<')) {\n          cov_bv2mpbp1p().b[28][0]++;\n        } else {\n          cov_bv2mpbp1p().b[28][1]++;\n          cov_bv2mpbp1p().s[69]++;\n          currentAttribute.name += c;\n          cov_bv2mpbp1p().s[70]++;\n          return attributeName;\n        }\n      }\n    }\n  }\n}\n\nfunction beforeAttributeValue(c) {\n  cov_bv2mpbp1p().f[7]++;\n  cov_bv2mpbp1p().s[71]++;\n\n  if ((cov_bv2mpbp1p().b[31][0]++, c.match(/^[\\t\\n\\f ]$/)) || (cov_bv2mpbp1p().b[31][1]++, c == '/') || (cov_bv2mpbp1p().b[31][2]++, c == '>') || (cov_bv2mpbp1p().b[31][3]++, c == EOF)) {\n    cov_bv2mpbp1p().b[30][0]++;\n    cov_bv2mpbp1p().s[72]++;\n    return beforeAttributeValue;\n  } else {\n    cov_bv2mpbp1p().b[30][1]++;\n    cov_bv2mpbp1p().s[73]++;\n\n    if (c == '\\\"') {\n      cov_bv2mpbp1p().b[32][0]++;\n      cov_bv2mpbp1p().s[74]++;\n      return doubuleQuotedAttributeValue;\n    } else {\n      cov_bv2mpbp1p().b[32][1]++;\n      cov_bv2mpbp1p().s[75]++;\n\n      if (c == '\\'') {\n        cov_bv2mpbp1p().b[33][0]++;\n        cov_bv2mpbp1p().s[76]++;\n        return singleQuotedAttributeValue;\n      } else {\n        cov_bv2mpbp1p().b[33][1]++;\n        cov_bv2mpbp1p().s[77]++;\n\n        if (c == '>') {\n          cov_bv2mpbp1p().b[34][0]++;\n        } else {\n          cov_bv2mpbp1p().b[34][1]++;\n          cov_bv2mpbp1p().s[78]++;\n          return UnquotedAttributeValue(c);\n        }\n      }\n    }\n  }\n}\n\nfunction doubuleQuotedAttributeValue(c) {\n  cov_bv2mpbp1p().f[8]++;\n  cov_bv2mpbp1p().s[79]++;\n\n  if (c == \"\\\"\") {\n    cov_bv2mpbp1p().b[35][0]++;\n    cov_bv2mpbp1p().s[80]++;\n    currentToken[currentAttribute.name] = currentAttribute.value;\n    cov_bv2mpbp1p().s[81]++;\n    return afterQuotedAttributeValue;\n  } else {\n    cov_bv2mpbp1p().b[35][1]++;\n    cov_bv2mpbp1p().s[82]++;\n\n    if (c == \"\\0\") {\n      cov_bv2mpbp1p().b[36][0]++;\n    } else {\n      cov_bv2mpbp1p().b[36][1]++;\n      cov_bv2mpbp1p().s[83]++;\n\n      if (c == EOF) {\n        cov_bv2mpbp1p().b[37][0]++;\n      } else {\n        cov_bv2mpbp1p().b[37][1]++;\n        cov_bv2mpbp1p().s[84]++;\n        currentAttribute.value += c;\n        cov_bv2mpbp1p().s[85]++;\n        return doubuleQuotedAttributeValue;\n      }\n    }\n  }\n}\n\nfunction singleQuotedAttributeValue(c) {\n  cov_bv2mpbp1p().f[9]++;\n  cov_bv2mpbp1p().s[86]++;\n\n  if (c == '\\'') {\n    cov_bv2mpbp1p().b[38][0]++;\n    cov_bv2mpbp1p().s[87]++;\n    currentToken[currentAttribute.name] = currentAttribute.value;\n    cov_bv2mpbp1p().s[88]++;\n    return afterQuotedAttributeValue;\n  } else {\n    cov_bv2mpbp1p().b[38][1]++;\n    cov_bv2mpbp1p().s[89]++;\n\n    if (c == \"\\0\") {\n      cov_bv2mpbp1p().b[39][0]++;\n    } else {\n      cov_bv2mpbp1p().b[39][1]++;\n      cov_bv2mpbp1p().s[90]++;\n\n      if (c == EOF) {\n        cov_bv2mpbp1p().b[40][0]++;\n      } else {\n        cov_bv2mpbp1p().b[40][1]++;\n        cov_bv2mpbp1p().s[91]++;\n        currentAttribute.value += c;\n        cov_bv2mpbp1p().s[92]++;\n        return singleQuotedAttributeValue;\n      }\n    }\n  }\n}\n\nfunction afterQuotedAttributeValue(c) {\n  cov_bv2mpbp1p().f[10]++;\n  cov_bv2mpbp1p().s[93]++;\n\n  if (c.match(/^[\\t\\n\\f ]$/)) {\n    cov_bv2mpbp1p().b[41][0]++;\n    cov_bv2mpbp1p().s[94]++;\n    return beforeAttributeName;\n  } else {\n    cov_bv2mpbp1p().b[41][1]++;\n    cov_bv2mpbp1p().s[95]++;\n\n    if (c == '/') {\n      cov_bv2mpbp1p().b[42][0]++;\n      cov_bv2mpbp1p().s[96]++;\n      return selfClosingStartTag;\n    } else {\n      cov_bv2mpbp1p().b[42][1]++;\n      cov_bv2mpbp1p().s[97]++;\n\n      if (c == '>') {\n        cov_bv2mpbp1p().b[43][0]++;\n        cov_bv2mpbp1p().s[98]++;\n        currentToken[currentAttribute.name] = currentAttribute.value;\n        cov_bv2mpbp1p().s[99]++;\n        emit(currentToken);\n        cov_bv2mpbp1p().s[100]++;\n        return data;\n      } else {\n        cov_bv2mpbp1p().b[43][1]++;\n        cov_bv2mpbp1p().s[101]++;\n\n        if (c == EOF) {\n          cov_bv2mpbp1p().b[44][0]++;\n        } else {\n          cov_bv2mpbp1p().b[44][1]++;\n          cov_bv2mpbp1p().s[102]++;\n          currentAttribute.value += c;\n          cov_bv2mpbp1p().s[103]++;\n          return afterQuotedAttributeValue; //return doubuleQuotedAttributeValue;\n        }\n      }\n    }\n  }\n}\n\nfunction UnquotedAttributeValue(c) {\n  cov_bv2mpbp1p().f[11]++;\n  cov_bv2mpbp1p().s[104]++;\n\n  if (c.match(/^[\\t\\n\\f ]$/)) {\n    cov_bv2mpbp1p().b[45][0]++;\n    cov_bv2mpbp1p().s[105]++;\n    currentToken[currentAttribute.name] = currentAttribute.value;\n    cov_bv2mpbp1p().s[106]++;\n    return beforeAttributeName;\n  } else {\n    cov_bv2mpbp1p().b[45][1]++;\n    cov_bv2mpbp1p().s[107]++;\n\n    if (c == '/') {\n      cov_bv2mpbp1p().b[46][0]++;\n      cov_bv2mpbp1p().s[108]++;\n      currentToken[currentAttribute.name] = currentAttribute.value;\n      cov_bv2mpbp1p().s[109]++;\n      return selfClosingStartTag;\n    } else {\n      cov_bv2mpbp1p().b[46][1]++;\n      cov_bv2mpbp1p().s[110]++;\n\n      if (c == '>') {\n        cov_bv2mpbp1p().b[47][0]++;\n        cov_bv2mpbp1p().s[111]++;\n        currentToken[currentAttribute.name] = currentAttribute.value;\n        cov_bv2mpbp1p().s[112]++;\n        emit(currentToken);\n        cov_bv2mpbp1p().s[113]++;\n        return data;\n      } else {\n        cov_bv2mpbp1p().b[47][1]++;\n        cov_bv2mpbp1p().s[114]++;\n\n        if (c == \"\\0\") {\n          cov_bv2mpbp1p().b[48][0]++;\n        } else {\n          cov_bv2mpbp1p().b[48][1]++;\n          cov_bv2mpbp1p().s[115]++;\n\n          if ((cov_bv2mpbp1p().b[50][0]++, c == '\\\"') || (cov_bv2mpbp1p().b[50][1]++, c == \"'\") || (cov_bv2mpbp1p().b[50][2]++, c == \"<\") || (cov_bv2mpbp1p().b[50][3]++, c == '=') || (cov_bv2mpbp1p().b[50][4]++, c == '`')) {\n            cov_bv2mpbp1p().b[49][0]++;\n          } else {\n            cov_bv2mpbp1p().b[49][1]++;\n            cov_bv2mpbp1p().s[116]++;\n\n            if (c == EOF) {\n              cov_bv2mpbp1p().b[51][0]++;\n            } else {\n              cov_bv2mpbp1p().b[51][1]++;\n              cov_bv2mpbp1p().s[117]++;\n              currentAttribute.value += c;\n              cov_bv2mpbp1p().s[118]++;\n              return UnquotedAttributeValue;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction selfClosingStartTag(c) {\n  cov_bv2mpbp1p().f[12]++;\n  cov_bv2mpbp1p().s[119]++;\n\n  if (c == \">\") {\n    cov_bv2mpbp1p().b[52][0]++;\n    cov_bv2mpbp1p().s[120]++;\n    currentToken.isSelfClosing = true;\n    cov_bv2mpbp1p().s[121]++;\n    emit(currentToken);\n    cov_bv2mpbp1p().s[122]++;\n    return data;\n  } else {\n    cov_bv2mpbp1p().b[52][1]++;\n    cov_bv2mpbp1p().s[123]++;\n\n    if (c == \"EOF\") {\n      cov_bv2mpbp1p().b[53][0]++;\n    } else {\n      cov_bv2mpbp1p().b[53][1]++;\n    }\n  }\n}\n\nfunction afterAttributeName(c) {\n  cov_bv2mpbp1p().f[13]++;\n  cov_bv2mpbp1p().s[124]++;\n\n  if (c.match(/^[\\t\\n\\f ]$/)) {\n    cov_bv2mpbp1p().b[54][0]++;\n    cov_bv2mpbp1p().s[125]++;\n    return afterAttributeName;\n  } else {\n    cov_bv2mpbp1p().b[54][1]++;\n    cov_bv2mpbp1p().s[126]++;\n\n    if (c == '/') {\n      cov_bv2mpbp1p().b[55][0]++;\n      cov_bv2mpbp1p().s[127]++;\n      return selfClosingStartTag;\n    } else {\n      cov_bv2mpbp1p().b[55][1]++;\n      cov_bv2mpbp1p().s[128]++;\n\n      if (c == '=') {\n        cov_bv2mpbp1p().b[56][0]++;\n        cov_bv2mpbp1p().s[129]++;\n        return beforeAttributeValue;\n      } else {\n        cov_bv2mpbp1p().b[56][1]++;\n        cov_bv2mpbp1p().s[130]++;\n\n        if (c == '>') {\n          cov_bv2mpbp1p().b[57][0]++;\n          cov_bv2mpbp1p().s[131]++;\n          currentToken[currentAttribute.name] = currentAttribute.value;\n          cov_bv2mpbp1p().s[132]++;\n          emit(currentToken);\n          cov_bv2mpbp1p().s[133]++;\n          return data;\n        } else {\n          cov_bv2mpbp1p().b[57][1]++;\n          cov_bv2mpbp1p().s[134]++;\n\n          if (c == EOF) {\n            cov_bv2mpbp1p().b[58][0]++;\n          } else {\n            cov_bv2mpbp1p().b[58][1]++;\n            cov_bv2mpbp1p().s[135]++;\n            currentToken[currentAttribute.name] = currentAttribute.value;\n            cov_bv2mpbp1p().s[136]++;\n            currentAttribute = {\n              name: \"\",\n              value: \"\"\n            };\n            cov_bv2mpbp1p().s[137]++;\n            return attributeName(c);\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction parseHTML(html) {\n  cov_bv2mpbp1p().f[14]++;\n  cov_bv2mpbp1p().s[138]++;\n  currentToken = null;\n  cov_bv2mpbp1p().s[139]++;\n  currentAttribute = null;\n  cov_bv2mpbp1p().s[140]++;\n  currentTextNode;\n  cov_bv2mpbp1p().s[141]++;\n  stack = [{\n    type: \"document\",\n    children: []\n  }];\n  var state = (cov_bv2mpbp1p().s[142]++, data);\n  cov_bv2mpbp1p().s[143]++;\n\n  var _iterator = _createForOfIteratorHelper(html),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var c = _step.value;\n      cov_bv2mpbp1p().s[144]++;\n      state = state(c);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  cov_bv2mpbp1p().s[145]++;\n  state = state(EOF);\n  cov_bv2mpbp1p().s[146]++;\n  console.log(html);\n  cov_bv2mpbp1p().s[147]++;\n  return stack[0];\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": null,
    "sourceType": "script",
    "mtime": 1604222510376
  }
}